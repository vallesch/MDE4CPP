//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSSMFACTORY_HPP
#define PSSMFACTORY_HPP

#include <map>
#include <memory>

#include "ecore/EFactory.hpp"

namespace PSSM 
{
	class PSSMPackage;
}
namespace PSSM::Semantics::Actions 
{
	class SM_ReadSelfActionActivation;
}

namespace PSSM::Semantics::CommonBehavior 
{
	class CallEventExecution;
	class CallEventOccurrence;
	class EventTriggeredExecution;
	class SM_ObjectActivation;
}

namespace PSSM::Semantics::Loci 
{
	class SM_ExecutionFactory;
	class SM_Locus;
}

namespace PSSM::Semantics::StateMachines 
{
	class ChoicePseudostateActivation;
	class CompletionEventOccurrence;
	class ConditionalPseudostateActivation;
	class ConnectionPointActivation;
	class DeepHistoryPseudostateActivation;
	class DeferredEventOccurrence;
	class DoActivityContextObject;
	class DoActivityContextObjectActivation;
	class DoActivityExecutionEventAccepter;
	class EntryPointPseudostateActivation;
	class ExitPointPseudostateActivation;
	class ExternalTransitionActivation;
	class FinalStateActivation;
	class ForkPseudostateActivation;
	class HistoryPseudostateActivation;
	class InitialPseudostateActivation;
	class InternalTransitionActivation;
	class JoinPseudostateActivation;
	class JunctionPseudostateActivation;
	class LocalTransitionActivation;
	class PseudostateActivation;
	class RegionActivation;
	class ShallowHistoryPseudostateActivation;
	class StateActivation;
	class StateConfiguration;
	class StateMachineConfiguration;
	class StateMachineEventAccepter;
	class StateMachineExecution;
	class StateMachineSemanticVisitor;
	class TerminatePseudostateActivation;
	class TransitionActivation;
	class VertexActivation;
}

namespace PSSM::Semantics::StructuredClassifiers 
{
	class SM_Object;
	class SM_RedefinitionBasedDispatchStrategy;
}

namespace PSSM::Semantics::Values 
{
	class SM_OpaqueExpressionEvaluation;
}

namespace fUML
{
	class Locus;
}


namespace PSSM 
{
	class PSSMFactory : virtual public ecore::EFactory 
	{
		private:    
			PSSMFactory(PSSMFactory const&) = delete;
			PSSMFactory& operator=(PSSMFactory const&) = delete;
		protected:
			PSSMFactory(){}
		
			//Singleton Instance and Getter
			private:
				static std::shared_ptr<PSSMFactory> instance;
			public:
				static std::shared_ptr<PSSMFactory> eInstance();
		
			//Creator functions
			virtual std::shared_ptr<ecore::EObject> create(std::string _className) const = 0;
			virtual std::shared_ptr<ecore::EObject> create(std::string _className, std::shared_ptr<EObject> _container, 	const unsigned int referenceID = -1) const = 0;
			virtual std::shared_ptr<ecore::EObject> create(const unsigned int classID, std::shared_ptr<EObject> _container = nullptr, 	const unsigned int referenceID = -1) const = 0;

			virtual std::shared_ptr<PSSM::Semantics::CommonBehavior::CallEventExecution> createCallEventExecution() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::CommonBehavior::CallEventOccurrence> createCallEventOccurrence() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::ChoicePseudostateActivation> createChoicePseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::CompletionEventOccurrence> createCompletionEventOccurrence() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::DeepHistoryPseudostateActivation> createDeepHistoryPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::DeferredEventOccurrence> createDeferredEventOccurrence() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::DoActivityContextObject> createDoActivityContextObject() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::DoActivityContextObjectActivation> createDoActivityContextObjectActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::DoActivityExecutionEventAccepter> createDoActivityExecutionEventAccepter() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::EntryPointPseudostateActivation> createEntryPointPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::CommonBehavior::EventTriggeredExecution> createEventTriggeredExecution() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::ExitPointPseudostateActivation> createExitPointPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::ExternalTransitionActivation> createExternalTransitionActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::FinalStateActivation> createFinalStateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::ForkPseudostateActivation> createForkPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::InitialPseudostateActivation> createInitialPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::InternalTransitionActivation> createInternalTransitionActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::JoinPseudostateActivation> createJoinPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::JunctionPseudostateActivation> createJunctionPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::LocalTransitionActivation> createLocalTransitionActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::RegionActivation> createRegionActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::Loci::SM_ExecutionFactory> createSM_ExecutionFactory() const = 0;
			//Add containing object
			virtual std::shared_ptr<PSSM::Semantics::Loci::SM_ExecutionFactory> createSM_ExecutionFactory_in_Locus(std::weak_ptr<fUML::Locus > par_locus) const = 0;
			
			
			virtual std::shared_ptr<PSSM::Semantics::Loci::SM_Locus> createSM_Locus() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StructuredClassifiers::SM_Object> createSM_Object() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::CommonBehavior::SM_ObjectActivation> createSM_ObjectActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::Values::SM_OpaqueExpressionEvaluation> createSM_OpaqueExpressionEvaluation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::Actions::SM_ReadSelfActionActivation> createSM_ReadSelfActionActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StructuredClassifiers::SM_RedefinitionBasedDispatchStrategy> createSM_RedefinitionBasedDispatchStrategy() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::ShallowHistoryPseudostateActivation> createShallowHistoryPseudostateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation> createStateActivation() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateConfiguration> createStateConfiguration() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateMachineConfiguration> createStateMachineConfiguration() const = 0;
			//Add containing object
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateMachineConfiguration> createStateMachineConfiguration_in_Execution(std::weak_ptr<PSSM::Semantics::StateMachines::StateMachineExecution > par_execution) const = 0;
			
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateMachineEventAccepter> createStateMachineEventAccepter() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateMachineExecution> createStateMachineExecution() const = 0;
			
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::TerminatePseudostateActivation> createTerminatePseudostateActivation() const = 0;
			
			
			//Package
			virtual std::shared_ptr<PSSMPackage> getPSSMPackage() const = 0;
	};
}
#endif /* end of include guard: PSSMFACTORY_HPP */

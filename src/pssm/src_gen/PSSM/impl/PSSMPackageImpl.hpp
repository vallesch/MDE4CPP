//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSSMPACKAGEIMPL_HPP
#define PSSMPACKAGEIMPL_HPP

#include "ecore/EcorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "PSSM/PSSMPackage.hpp"

namespace PSSM 
{
}

namespace ecore
{
	class EcoreFactory;
}


namespace PSSM
{
	class PSSMPackageImpl : public ecore::EPackageImpl ,virtual public PSSMPackage
	{
		private:    
			PSSMPackageImpl(PSSMPackageImpl const&) = delete;
			PSSMPackageImpl& operator=(PSSMPackageImpl const&) = delete;

		protected:
			PSSMPackageImpl();

		public:
			virtual ~PSSMPackageImpl();

			// Begin Class CallEventExecution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallEventExecution_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getCallEventExecution_EAttribute_callerSuspended() const ;
			
			virtual std::shared_ptr<ecore::EReference> getCallEventExecution_EReference_behavior() const ;
			virtual std::shared_ptr<ecore::EReference> getCallEventExecution_EReference_callerContext() const ;
			virtual std::shared_ptr<ecore::EReference> getCallEventExecution_EReference_operation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCallEventExecution_EOperation__send_CallEventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallEventExecution_EOperation__suspend() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallEventExecution_EOperation_execute() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallEventExecution_EOperation_getBehavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallEventExecution_EOperation_getInputParameterValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallEventExecution_EOperation_new_() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallEventExecution_EOperation_releaseCaller() const ;
			
			// End Class CallEventExecution

			// Begin Class CallEventOccurrence
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallEventOccurrence_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCallEventOccurrence_EReference_execution() const ;
			
			
			// End Class CallEventOccurrence

			// Begin Class ChoicePseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getChoicePseudostateActivation_EClass() const ;
			
			
			
			
			// End Class ChoicePseudostateActivation

			// Begin Class CompletionEventOccurrence
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCompletionEventOccurrence_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCompletionEventOccurrence_EReference_stateActivation() const ;
			
			
			// End Class CompletionEventOccurrence

			// Begin Class ConditionalPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConditionalPseudostateActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getConditionalPseudostateActivation_EOperation_isElseTransition_TransitionActivation() const ;
			
			// End Class ConditionalPseudostateActivation

			// Begin Class ConnectionPointActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConnectionPointActivation_EClass() const ;
			
			
			
			
			// End Class ConnectionPointActivation

			// Begin Class DeepHistoryPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDeepHistoryPseudostateActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getDeepHistoryPseudostateActivation_EOperation_canRestore_StateActivation() const ;
			
			// End Class DeepHistoryPseudostateActivation

			// Begin Class DeferredEventOccurrence
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDeferredEventOccurrence_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDeferredEventOccurrence_EReference_constrainingStateActivation() const ;
			virtual std::shared_ptr<ecore::EReference> getDeferredEventOccurrence_EReference_deferredEventOccurrence() const ;
			
			
			// End Class DeferredEventOccurrence

			// Begin Class DoActivityContextObject
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDoActivityContextObject_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDoActivityContextObject_EReference_context() const ;
			virtual std::shared_ptr<ecore::EReference> getDoActivityContextObject_EReference_owner() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation__register_EventAccepter() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_destroy() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_dispatch_Operation() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_getFeatureValue_StructuralFeature() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_initialize_Object() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_send_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_setFeatureValue_StructuralFeature_Integer() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_startBehavior_Class_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_unregister_EventAccepter() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObject_EOperation_unregisterFromContext_EventAccepter() const ;
			
			// End Class DoActivityContextObject

			// Begin Class DoActivityContextObjectActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDoActivityContextObjectActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObjectActivation_EOperation_dispatchNextEvent() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityContextObjectActivation_EOperation_startBehavior_Class_ParameterValue() const ;
			
			// End Class DoActivityContextObjectActivation

			// Begin Class DoActivityExecutionEventAccepter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDoActivityExecutionEventAccepter_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDoActivityExecutionEventAccepter_EReference_context() const ;
			virtual std::shared_ptr<ecore::EReference> getDoActivityExecutionEventAccepter_EReference_encapsulatedAccepter() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDoActivityExecutionEventAccepter_EOperation_accept_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getDoActivityExecutionEventAccepter_EOperation_match_EventOccurrence() const ;
			
			// End Class DoActivityExecutionEventAccepter

			// Begin Class EntryPointPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEntryPointPseudostateActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getEntryPointPseudostateActivation_EOperation__enter_TransitionActivation_RegionActivation() const ;
			
			// End Class EntryPointPseudostateActivation

			// Begin Class EventTriggeredExecution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEventTriggeredExecution_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getEventTriggeredExecution_EReference_triggeringEventOccurrence() const ;
			virtual std::shared_ptr<ecore::EReference> getEventTriggeredExecution_EReference_wrappedExecution() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getEventTriggeredExecution_EOperation_copy() const ;
			virtual std::shared_ptr<ecore::EOperation> getEventTriggeredExecution_EOperation_execute() const ;
			virtual std::shared_ptr<ecore::EOperation> getEventTriggeredExecution_EOperation_finalize() const ;
			virtual std::shared_ptr<ecore::EOperation> getEventTriggeredExecution_EOperation_initialize() const ;
			virtual std::shared_ptr<ecore::EOperation> getEventTriggeredExecution_EOperation_new_() const ;
			
			// End Class EventTriggeredExecution

			// Begin Class ExitPointPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExitPointPseudostateActivation_EClass() const ;
			
			
			
			
			// End Class ExitPointPseudostateActivation

			// Begin Class ExternalTransitionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExternalTransitionActivation_EClass() const ;
			
			
			
			
			// End Class ExternalTransitionActivation

			// Begin Class FinalStateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFinalStateActivation_EClass() const ;
			
			
			
			
			// End Class FinalStateActivation

			// Begin Class ForkPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getForkPseudostateActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getForkPseudostateActivation_EOperation__canPropagateExecution_TransitionActivation_RegionActivation() const ;
			
			// End Class ForkPseudostateActivation

			// Begin Class HistoryPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getHistoryPseudostateActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getHistoryPseudostateActivation_EOperation_hasDefaultTransition() const ;
			virtual std::shared_ptr<ecore::EOperation> getHistoryPseudostateActivation_EOperation_restore_StateActivation_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getHistoryPseudostateActivation_EOperation_restore_RegionActivation_EventOccurrence() const ;
			
			// End Class HistoryPseudostateActivation

			// Begin Class InitialPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInitialPseudostateActivation_EClass() const ;
			
			
			
			
			// End Class InitialPseudostateActivation

			// Begin Class InternalTransitionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInternalTransitionActivation_EClass() const ;
			
			
			
			
			// End Class InternalTransitionActivation

			// Begin Class JoinPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getJoinPseudostateActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getJoinPseudostateActivation_EOperation__canPropagateExecution_TransitionActivation_RegionActivation() const ;
			
			// End Class JoinPseudostateActivation

			// Begin Class JunctionPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getJunctionPseudostateActivation_EClass() const ;
			
			
			
			
			// End Class JunctionPseudostateActivation

			// Begin Class LocalTransitionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLocalTransitionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLocalTransitionActivation_EOperation_getContainingState() const ;
			
			// End Class LocalTransitionActivation

			// Begin Class PseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPseudostateActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getPseudostateActivation_EReference_fireableTransitions() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPseudostateActivation_EOperation_evaluateAllGuards_EventOccurrence() const ;
			
			// End Class PseudostateActivation

			// Begin Class RegionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRegionActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getRegionActivation_EAttribute_isCompleted() const ;
			
			virtual std::shared_ptr<ecore::EReference> getRegionActivation_EReference_history() const ;
			virtual std::shared_ptr<ecore::EReference> getRegionActivation_EReference_transitionActivations() const ;
			virtual std::shared_ptr<ecore::EReference> getRegionActivation_EReference_vertexActivations() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_canPropagateExecution_TransitionActivation_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_enter_TransitionActivation_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_exit_TransitionActivation_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_getOrigin() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_getTransitionActivations() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_getVertexActivation_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_getVertexActivations() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_isRedefined_Vertex_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_isRedefined_Transition_Transition() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegionActivation_EOperation_terminate() const ;
			
			// End Class RegionActivation

			// Begin Class SM_ExecutionFactory
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSM_ExecutionFactory_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSM_ExecutionFactory_EOperation_instantiateVisitor_Element() const ;
			
			// End Class SM_ExecutionFactory

			// Begin Class SM_Locus
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSM_Locus_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSM_Locus_EOperation_instantiate_Class() const ;
			
			// End Class SM_Locus

			// Begin Class SM_Object
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSM_Object_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSM_Object_EOperation_destroy() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_Object_EOperation_startBehavior_Class_ParameterValue() const ;
			
			// End Class SM_Object

			// Begin Class SM_ObjectActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSM_ObjectActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSM_ObjectActivation_EReference_deferredEventPool() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getSM_ObjectActivation_EOperation_getDeferredEventInsertionIndex() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_ObjectActivation_EOperation_getNextCompletionEvent() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_ObjectActivation_EOperation_getNextEvent() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_ObjectActivation_EOperation_registerCompletionEvent_StateActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_ObjectActivation_EOperation_registerDeferredEvent_EventOccurrence_StateActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_ObjectActivation_EOperation_releaseDeferredEvents_StateActivation() const ;
			
			// End Class SM_ObjectActivation

			// Begin Class SM_OpaqueExpressionEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSM_OpaqueExpressionEvaluation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSM_OpaqueExpressionEvaluation_EReference_context() const ;
			virtual std::shared_ptr<ecore::EReference> getSM_OpaqueExpressionEvaluation_EReference_parameterValues() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getSM_OpaqueExpressionEvaluation_EOperation_executeExpressionBehavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_OpaqueExpressionEvaluation_EOperation_getParameterValue_Parameter() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_OpaqueExpressionEvaluation_EOperation_initialize_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_OpaqueExpressionEvaluation_EOperation_setParameterValue_ParameterValue() const ;
			
			// End Class SM_OpaqueExpressionEvaluation

			// Begin Class SM_ReadSelfActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSM_ReadSelfActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSM_ReadSelfActionActivation_EOperation_getExecutionContext() const ;
			
			// End Class SM_ReadSelfActionActivation

			// Begin Class SM_RedefinitionBasedDispatchStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSM_RedefinitionBasedDispatchStrategy_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSM_RedefinitionBasedDispatchStrategy_EOperation_dispatch_Object_Operation() const ;
			virtual std::shared_ptr<ecore::EOperation> getSM_RedefinitionBasedDispatchStrategy_EOperation_getMethod_Object_Operation() const ;
			
			// End Class SM_RedefinitionBasedDispatchStrategy

			// Begin Class ShallowHistoryPseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getShallowHistoryPseudostateActivation_EClass() const ;
			
			
			
			
			// End Class ShallowHistoryPseudostateActivation

			// Begin Class StateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getStateActivation_EAttribute_isDoActivityCompleted() const ;
			virtual std::shared_ptr<ecore::EAttribute> getStateActivation_EAttribute_isEntryCompleted() const ;
			virtual std::shared_ptr<ecore::EAttribute> getStateActivation_EAttribute_isExitCompleted() const ;
			
			virtual std::shared_ptr<ecore::EReference> getStateActivation_EReference_connectionPointActivations() const ;
			virtual std::shared_ptr<ecore::EReference> getStateActivation_EReference_doActivityContextObject() const ;
			virtual std::shared_ptr<ecore::EReference> getStateActivation_EReference_regionActivations() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_canDefer_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_defer_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_enterRegions_TransitionActivation_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_getConnectionPointActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_getConnectionPointActivation_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_getDoActivity() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_getEntry() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_getExit() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_getFireableTransitions_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_getRegionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_hasCompleted() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_notifyCompletion() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_releaseDeferredEvents() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_tryExecuteEntry_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_tryExecuteExit_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateActivation_EOperation_tryInvokeDoActivity_EventOccurrence() const ;
			
			// End Class StateActivation

			// Begin Class StateConfiguration
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateConfiguration_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getStateConfiguration_EAttribute_level() const ;
			
			virtual std::shared_ptr<ecore::EReference> getStateConfiguration_EReference_children() const ;
			virtual std::shared_ptr<ecore::EReference> getStateConfiguration_EReference_completeConfiguration() const ;
			virtual std::shared_ptr<ecore::EReference> getStateConfiguration_EReference_vertexActivation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_add_VertexActivation_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_addChild_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_getChildren() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_getContext_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_getLevel() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_getParent() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_getVertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_isActive() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_remove_VertexActivation_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_removeChild_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateConfiguration_EOperation_setParent_StateConfiguration() const ;
			
			// End Class StateConfiguration

			// Begin Class StateMachineConfiguration
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateMachineConfiguration_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStateMachineConfiguration_EReference_execution() const ;
			virtual std::shared_ptr<ecore::EReference> getStateMachineConfiguration_EReference_rootConfiguration() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation__register_StateActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_add_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_getExecution() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_getRoot() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_getVertexActivationsAtLevel_Integer() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_isActive_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_isStable() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_remove_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineConfiguration_EOperation_unregister_StateActivation() const ;
			
			// End Class StateMachineConfiguration

			// Begin Class StateMachineEventAccepter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateMachineEventAccepter_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStateMachineEventAccepter_EReference_registrationContext() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation__defer_EventOccurrence_StateConfiguration() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation__isDeferred_EventOccurrence_StateConfiguration() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation__select_EventOccurrence_StateConfiguration() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation_accept_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation_defer_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation_isDeferred_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation_isTriggering_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation_match_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineEventAccepter_EOperation_select_EventOccurrence() const ;
			
			// End Class StateMachineEventAccepter

			// Begin Class StateMachineExecution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateMachineExecution_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStateMachineExecution_EReference_configuration() const ;
			virtual std::shared_ptr<ecore::EReference> getStateMachineExecution_EReference_regionActivations() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_execute() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_getConfiguration() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_getRegionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_getVertexActivation_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_initRegions() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_new_() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_startBehavior_Class_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineExecution_EOperation_terminate() const ;
			
			// End Class StateMachineExecution

			// Begin Class StateMachineSemanticVisitor
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateMachineSemanticVisitor_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStateMachineSemanticVisitor_EReference_node() const ;
			virtual std::shared_ptr<ecore::EReference> getStateMachineSemanticVisitor_EReference_parent() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_activate() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_activateTransitions() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_getContextChain() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_getExecutionContext() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_getExecutionFor_Behavior_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_getExecutionLocus() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_getNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_getParent() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_getStateMachineExecution() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_isVisitorFor_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_match_EventOccurrence_Trigger() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_setNode_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachineSemanticVisitor_EOperation_setParent_EJavaObject() const ;
			
			// End Class StateMachineSemanticVisitor

			// Begin Class TerminatePseudostateActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTerminatePseudostateActivation_EClass() const ;
			
			
			
			
			// End Class TerminatePseudostateActivation

			// Begin Class TransitionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTransitionActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getTransitionActivation_EAttribute_analyticalStatus() const ;
			virtual std::shared_ptr<ecore::EAttribute> getTransitionActivation_EAttribute_lastPropagation() const ;
			virtual std::shared_ptr<ecore::EAttribute> getTransitionActivation_EAttribute_status() const ;
			
			virtual std::shared_ptr<ecore::EReference> getTransitionActivation_EReference_lastTriggeringEventOccurrence() const ;
			virtual std::shared_ptr<ecore::EReference> getTransitionActivation_EReference_leastCommonAncestor() const ;
			virtual std::shared_ptr<ecore::EReference> getTransitionActivation_EReference_sourceVertexActivation() const ;
			virtual std::shared_ptr<ecore::EReference> getTransitionActivation_EReference_targetVertexActivation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_canFireOn_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_canPropagateExecution_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_enterTarget_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_evaluateGuard_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_exitSource_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_fire_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_getLeastCommonAncestor() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_getSourceActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_getStatus() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_getTargetActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_hasTrigger_EventOccurrence() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_isGuarded() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_isReached() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_isTraversed_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_isTriggered_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_setSourceActivation_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_setStatus_TransitionMetadata() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_setTargetActivation_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransitionActivation_EOperation_tryExecuteEffect_EventOccurrence() const ;
			
			// End Class TransitionActivation

			// Begin Class VertexActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getVertexActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getVertexActivation_EAttribute_status() const ;
			
			virtual std::shared_ptr<ecore::EReference> getVertexActivation_EReference_incomingTransitionActivations() const ;
			virtual std::shared_ptr<ecore::EReference> getVertexActivation_EReference_outgoingTransitionActivations() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_addIncomingTransition_TransitionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_addOutgoingTransition_TransitionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_canPropagateExecution_TransitionActivation_RegionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_enter_TransitionActivation_RegionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_exit_TransitionActivation_RegionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getAscendingHierarchy() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getIncomingTransitions() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getLeastCommonAncestor_VertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getOutgoingTransitions() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getOwningRegionActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getParentVertexActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getRegionActivation_SemanticVisitor() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getStatus() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_getVertexActivation_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_isActive() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_isEnterable_TransitionActivation_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_isExitable_TransitionActivation_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_setStatus_StateMetadata() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_tagIncomingTransition_TransitionMetadata_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_tagOutgoingTransition_TransitionMetadata_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertexActivation_EOperation_terminate() const ;
			
			// End Class VertexActivation

			virtual std::shared_ptr<ecore::EEnum> getTransitionMetadata_EEnum() const ;
			virtual std::shared_ptr<ecore::EEnum> getStateMetadata_EEnum() const ;
			

		private:
			std::shared_ptr<ecore::EClass> m_callEventExecution_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_callEventOccurrence_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_choicePseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_completionEventOccurrence_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_conditionalPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_connectionPointActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_deepHistoryPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_deferredEventOccurrence_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_doActivityContextObject_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_doActivityContextObjectActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_doActivityExecutionEventAccepter_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_entryPointPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_eventTriggeredExecution_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_exitPointPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_externalTransitionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_finalStateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_forkPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_historyPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_initialPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_internalTransitionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_joinPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_junctionPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_localTransitionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_pseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_regionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sM_ExecutionFactory_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sM_Locus_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sM_Object_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sM_ObjectActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sM_OpaqueExpressionEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sM_ReadSelfActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sM_RedefinitionBasedDispatchStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_shallowHistoryPseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_stateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_stateConfiguration_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_stateMachineConfiguration_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_stateMachineEventAccepter_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_stateMachineExecution_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_stateMachineSemanticVisitor_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_terminatePseudostateActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_transitionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_vertexActivation_EClass = nullptr;
			
			std::shared_ptr<ecore::EEnum> m_stateMetadata_EEnum = nullptr;
			std::shared_ptr<ecore::EEnum> m_transitionMetadata_EEnum = nullptr;
			
			std::shared_ptr<ecore::EAttribute> m_transitionActivation_EAttribute_analyticalStatus = nullptr;
			std::shared_ptr<ecore::EAttribute> m_callEventExecution_EAttribute_callerSuspended = nullptr;
			std::shared_ptr<ecore::EAttribute> m_regionActivation_EAttribute_isCompleted = nullptr;
			std::shared_ptr<ecore::EAttribute> m_stateActivation_EAttribute_isDoActivityCompleted = nullptr;
			std::shared_ptr<ecore::EAttribute> m_stateActivation_EAttribute_isEntryCompleted = nullptr;
			std::shared_ptr<ecore::EAttribute> m_stateActivation_EAttribute_isExitCompleted = nullptr;
			std::shared_ptr<ecore::EAttribute> m_transitionActivation_EAttribute_lastPropagation = nullptr;
			std::shared_ptr<ecore::EAttribute> m_stateConfiguration_EAttribute_level = nullptr;
			std::shared_ptr<ecore::EAttribute> m_transitionActivation_EAttribute_status = nullptr;
			std::shared_ptr<ecore::EAttribute> m_vertexActivation_EAttribute_status = nullptr;
			
			std::shared_ptr<ecore::EReference> m_callEventExecution_EReference_behavior = nullptr;
			std::shared_ptr<ecore::EReference> m_callEventExecution_EReference_callerContext = nullptr;
			std::shared_ptr<ecore::EReference> m_stateConfiguration_EReference_children = nullptr;
			std::shared_ptr<ecore::EReference> m_stateConfiguration_EReference_completeConfiguration = nullptr;
			std::shared_ptr<ecore::EReference> m_stateMachineExecution_EReference_configuration = nullptr;
			std::shared_ptr<ecore::EReference> m_stateActivation_EReference_connectionPointActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_deferredEventOccurrence_EReference_constrainingStateActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_sM_OpaqueExpressionEvaluation_EReference_context = nullptr;
			std::shared_ptr<ecore::EReference> m_doActivityContextObject_EReference_context = nullptr;
			std::shared_ptr<ecore::EReference> m_doActivityExecutionEventAccepter_EReference_context = nullptr;
			std::shared_ptr<ecore::EReference> m_deferredEventOccurrence_EReference_deferredEventOccurrence = nullptr;
			std::shared_ptr<ecore::EReference> m_sM_ObjectActivation_EReference_deferredEventPool = nullptr;
			std::shared_ptr<ecore::EReference> m_stateActivation_EReference_doActivityContextObject = nullptr;
			std::shared_ptr<ecore::EReference> m_doActivityExecutionEventAccepter_EReference_encapsulatedAccepter = nullptr;
			std::shared_ptr<ecore::EReference> m_callEventOccurrence_EReference_execution = nullptr;
			std::shared_ptr<ecore::EReference> m_stateMachineConfiguration_EReference_execution = nullptr;
			std::shared_ptr<ecore::EReference> m_pseudostateActivation_EReference_fireableTransitions = nullptr;
			std::shared_ptr<ecore::EReference> m_regionActivation_EReference_history = nullptr;
			std::shared_ptr<ecore::EReference> m_vertexActivation_EReference_incomingTransitionActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_transitionActivation_EReference_lastTriggeringEventOccurrence = nullptr;
			std::shared_ptr<ecore::EReference> m_transitionActivation_EReference_leastCommonAncestor = nullptr;
			std::shared_ptr<ecore::EReference> m_stateMachineSemanticVisitor_EReference_node = nullptr;
			std::shared_ptr<ecore::EReference> m_callEventExecution_EReference_operation = nullptr;
			std::shared_ptr<ecore::EReference> m_vertexActivation_EReference_outgoingTransitionActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_doActivityContextObject_EReference_owner = nullptr;
			std::shared_ptr<ecore::EReference> m_sM_OpaqueExpressionEvaluation_EReference_parameterValues = nullptr;
			std::shared_ptr<ecore::EReference> m_stateMachineSemanticVisitor_EReference_parent = nullptr;
			std::shared_ptr<ecore::EReference> m_stateActivation_EReference_regionActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_stateMachineExecution_EReference_regionActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_stateMachineEventAccepter_EReference_registrationContext = nullptr;
			std::shared_ptr<ecore::EReference> m_stateMachineConfiguration_EReference_rootConfiguration = nullptr;
			std::shared_ptr<ecore::EReference> m_transitionActivation_EReference_sourceVertexActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_completionEventOccurrence_EReference_stateActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_transitionActivation_EReference_targetVertexActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_regionActivation_EReference_transitionActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_eventTriggeredExecution_EReference_triggeringEventOccurrence = nullptr;
			std::shared_ptr<ecore::EReference> m_stateConfiguration_EReference_vertexActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_regionActivation_EReference_vertexActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_eventTriggeredExecution_EReference_wrappedExecution = nullptr;
			
			std::shared_ptr<ecore::EOperation> m_forkPseudostateActivation_EOperation__canPropagateExecution_TransitionActivation_RegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_joinPseudostateActivation_EOperation__canPropagateExecution_TransitionActivation_RegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation__defer_EventOccurrence_StateConfiguration = nullptr;
			std::shared_ptr<ecore::EOperation> m_entryPointPseudostateActivation_EOperation__enter_TransitionActivation_RegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation__isDeferred_EventOccurrence_StateConfiguration = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation__register_EventAccepter = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation__register_StateActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation__select_EventOccurrence_StateConfiguration = nullptr;
			std::shared_ptr<ecore::EOperation> m_callEventExecution_EOperation__send_CallEventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_callEventExecution_EOperation__suspend = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation_accept_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityExecutionEventAccepter_EOperation_accept_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_activate = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_activateTransitions = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_add_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_add_VertexActivation_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_addChild_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_addIncomingTransition_TransitionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_addOutgoingTransition_TransitionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_canDefer_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_canFireOn_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_canPropagateExecution_TransitionActivation_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_canPropagateExecution_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_canPropagateExecution_TransitionActivation_RegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_deepHistoryPseudostateActivation_EOperation_canRestore_StateActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_eventTriggeredExecution_EOperation_copy = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_defer_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation_defer_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_Object_EOperation_destroy = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_destroy = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_RedefinitionBasedDispatchStrategy_EOperation_dispatch_Object_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_dispatch_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObjectActivation_EOperation_dispatchNextEvent = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_enter_TransitionActivation_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_enter_TransitionActivation_RegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_enterRegions_TransitionActivation_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_enterTarget_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_pseudostateActivation_EOperation_evaluateAllGuards_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_evaluateGuard_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_eventTriggeredExecution_EOperation_execute = nullptr;
			std::shared_ptr<ecore::EOperation> m_callEventExecution_EOperation_execute = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_execute = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_OpaqueExpressionEvaluation_EOperation_executeExpressionBehavior = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_exit_TransitionActivation_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_exit_TransitionActivation_RegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_exitSource_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_eventTriggeredExecution_EOperation_finalize = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_fire_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getAscendingHierarchy = nullptr;
			std::shared_ptr<ecore::EOperation> m_callEventExecution_EOperation_getBehavior = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_getChildren = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_getConfiguration = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_getConnectionPointActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_getConnectionPointActivation_Vertex = nullptr;
			std::shared_ptr<ecore::EOperation> m_localTransitionActivation_EOperation_getContainingState = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_getContext_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_getContextChain = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ObjectActivation_EOperation_getDeferredEventInsertionIndex = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_getDoActivity = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_getEntry = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_getExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_getExecutionContext = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ReadSelfActionActivation_EOperation_getExecutionContext = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_getExecutionFor_Behavior_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_getExecutionLocus = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_getExit = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_getFeatureValue_StructuralFeature = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_getFireableTransitions_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getIncomingTransitions = nullptr;
			std::shared_ptr<ecore::EOperation> m_callEventExecution_EOperation_getInputParameterValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_getLeastCommonAncestor = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getLeastCommonAncestor_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_getLevel = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_RedefinitionBasedDispatchStrategy_EOperation_getMethod_Object_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ObjectActivation_EOperation_getNextCompletionEvent = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ObjectActivation_EOperation_getNextEvent = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_getNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_getOrigin = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getOutgoingTransitions = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getOwningRegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_OpaqueExpressionEvaluation_EOperation_getParameterValue_Parameter = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_getParent = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_getParent = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getParentVertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getRegionActivation_SemanticVisitor = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_getRegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_getRegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_getRoot = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_getSourceActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_getStateMachineExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_getStatus = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getStatus = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_getTargetActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_getTransitionActivations = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_getVertexActivation_Vertex = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_getVertexActivation_Vertex = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_getVertexActivation_Vertex = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_getVertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_getVertexActivations = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_getVertexActivationsAtLevel_Integer = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_hasCompleted = nullptr;
			std::shared_ptr<ecore::EOperation> m_historyPseudostateActivation_EOperation_hasDefaultTransition = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_hasTrigger_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_initRegions = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_OpaqueExpressionEvaluation_EOperation_initialize_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_eventTriggeredExecution_EOperation_initialize = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_initialize_Object = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_Locus_EOperation_instantiate_Class = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ExecutionFactory_EOperation_instantiateVisitor_Element = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_isActive = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_isActive_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_isActive = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation_isDeferred_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_conditionalPseudostateActivation_EOperation_isElseTransition_TransitionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_isEnterable_TransitionActivation_Boolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_isExitable_TransitionActivation_Boolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_isGuarded = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_isReached = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_isRedefined_Vertex_Vertex = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_isRedefined_Transition_Transition = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_isStable = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_isTraversed_Boolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_isTriggered_Boolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation_isTriggering_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_isVisitorFor_NamedElement = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_match_EventOccurrence_Trigger = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation_match_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityExecutionEventAccepter_EOperation_match_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_eventTriggeredExecution_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_callEventExecution_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_notifyCompletion = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ObjectActivation_EOperation_registerCompletionEvent_StateActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ObjectActivation_EOperation_registerDeferredEvent_EventOccurrence_StateActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_callEventExecution_EOperation_releaseCaller = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_ObjectActivation_EOperation_releaseDeferredEvents_StateActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_releaseDeferredEvents = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_remove_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_remove_VertexActivation_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_removeChild_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_historyPseudostateActivation_EOperation_restore_StateActivation_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_historyPseudostateActivation_EOperation_restore_RegionActivation_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineEventAccepter_EOperation_select_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_send_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_setFeatureValue_StructuralFeature_Integer = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_setNode_NamedElement = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_OpaqueExpressionEvaluation_EOperation_setParameterValue_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineSemanticVisitor_EOperation_setParent_EJavaObject = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateConfiguration_EOperation_setParent_StateConfiguration = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_setSourceActivation_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_setStatus_TransitionMetadata = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_setStatus_StateMetadata = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_setTargetActivation_VertexActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_sM_Object_EOperation_startBehavior_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_startBehavior_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_startBehavior_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObjectActivation_EOperation_startBehavior_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_tagIncomingTransition_TransitionMetadata_Boolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_tagOutgoingTransition_TransitionMetadata_Boolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_regionActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_vertexActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineExecution_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_transitionActivation_EOperation_tryExecuteEffect_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_tryExecuteEntry_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_tryExecuteExit_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateActivation_EOperation_tryInvokeDoActivity_EventOccurrence = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_unregister_EventAccepter = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachineConfiguration_EOperation_unregister_StateActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_doActivityContextObject_EOperation_unregisterFromContext_EventAccepter = nullptr;
			

			friend class PSSMPackage;

			static bool isInited;
			static PSSMPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createCallEventExecutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallEventOccurrenceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createChoicePseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCompletionEventOccurrenceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConditionalPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConnectionPointActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDeepHistoryPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDeferredEventOccurrenceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDoActivityContextObjectContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDoActivityContextObjectActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDoActivityExecutionEventAccepterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEntryPointPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEventTriggeredExecutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExitPointPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExternalTransitionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFinalStateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createForkPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createHistoryPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInitialPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInternalTransitionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createJoinPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createJunctionPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLocalTransitionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRegionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSM_ExecutionFactoryContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSM_LocusContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSM_ObjectContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSM_ObjectActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSM_OpaqueExpressionEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSM_ReadSelfActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSM_RedefinitionBasedDispatchStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createShallowHistoryPseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateConfigurationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateMachineConfigurationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateMachineEventAccepterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateMachineExecutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateMachineSemanticVisitorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTerminatePseudostateActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTransitionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createVertexActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);

			void initializeCallEventExecutionContent();
			void initializeCallEventOccurrenceContent();
			void initializeChoicePseudostateActivationContent();
			void initializeCompletionEventOccurrenceContent();
			void initializeConditionalPseudostateActivationContent();
			void initializeConnectionPointActivationContent();
			void initializeDeepHistoryPseudostateActivationContent();
			void initializeDeferredEventOccurrenceContent();
			void initializeDoActivityContextObjectContent();
			void initializeDoActivityContextObjectActivationContent();
			void initializeDoActivityExecutionEventAccepterContent();
			void initializeEntryPointPseudostateActivationContent();
			void initializeEventTriggeredExecutionContent();
			void initializeExitPointPseudostateActivationContent();
			void initializeExternalTransitionActivationContent();
			void initializeFinalStateActivationContent();
			void initializeForkPseudostateActivationContent();
			void initializeHistoryPseudostateActivationContent();
			void initializeInitialPseudostateActivationContent();
			void initializeInternalTransitionActivationContent();
			void initializeJoinPseudostateActivationContent();
			void initializeJunctionPseudostateActivationContent();
			void initializeLocalTransitionActivationContent();
			void initializePseudostateActivationContent();
			void initializeRegionActivationContent();
			void initializeSM_ExecutionFactoryContent();
			void initializeSM_LocusContent();
			void initializeSM_ObjectContent();
			void initializeSM_ObjectActivationContent();
			void initializeSM_OpaqueExpressionEvaluationContent();
			void initializeSM_ReadSelfActionActivationContent();
			void initializeSM_RedefinitionBasedDispatchStrategyContent();
			void initializeShallowHistoryPseudostateActivationContent();
			void initializeStateActivationContent();
			void initializeStateConfigurationContent();
			void initializeStateMachineConfigurationContent();
			void initializeStateMachineEventAccepterContent();
			void initializeStateMachineExecutionContent();
			void initializeStateMachineSemanticVisitorContent();
			void initializeTerminatePseudostateActivationContent();
			void initializeTransitionActivationContent();
			void initializeVertexActivationContent();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: PSSMPACKAGEIMPL_HPP */

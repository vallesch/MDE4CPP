//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSSM_SEMANTICS_STATEMACHINES_STATEMACHINECONFIGURATION_HPP
#define PSSM_SEMANTICS_STATEMACHINES_STATEMACHINECONFIGURATION_HPP

#include <list>
#include <memory>
#include <string>


// forward declarations



//*********************************
// generated Includes

#include <map>

namespace persistence
{
	namespace interfaces
	{
		class XLoadHandler; // used for Persistence
		class XSaveHandler; // used for Persistence
	}
}

namespace PSSM
{
	class PSSMFactory;
}

//Forward Declaration for used types
namespace PSSM::Semantics::StateMachines 
{
	class StateActivation;
}

namespace PSSM::Semantics::StateMachines 
{
	class StateConfiguration;
}

namespace PSSM::Semantics::StateMachines 
{
	class StateMachineExecution;
}

namespace PSSM::Semantics::StateMachines 
{
	class VertexActivation;
}

// base class includes

// enum includes

#include "ecore/EObject.hpp"

//*********************************
namespace PSSM::Semantics::StateMachines 
{
	/*!
	 */
	class StateMachineConfiguration : virtual public ecore::EObject 

	{
		public:
 			StateMachineConfiguration(const StateMachineConfiguration &) {}
			StateMachineConfiguration& operator=(StateMachineConfiguration const&) = delete;

		protected:
			StateMachineConfiguration(){}


			//Additional constructors for the containments back reference

			StateMachineConfiguration(std::weak_ptr<PSSM::Semantics::StateMachines::StateMachineExecution > par_execution);

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~StateMachineConfiguration() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual bool _register(std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation>  stateActivation) = 0;
			
			/*!
			 */ 
			virtual bool add(std::shared_ptr<PSSM::Semantics::StateMachines::VertexActivation>  activation) = 0;
			
			
			
			/*!
			 */ 
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateConfiguration> getRoot() = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<Bag<PSSM::Semantics::StateMachines::VertexActivation> > getVertexActivationsAtLevel(int level) = 0;
			
			/*!
			 */ 
			virtual bool isActive(std::shared_ptr<PSSM::Semantics::StateMachines::VertexActivation>  activation) = 0;
			
			/*!
			 */ 
			virtual bool isStable() = 0;
			
			/*!
			 */ 
			virtual bool remove(std::shared_ptr<PSSM::Semantics::StateMachines::VertexActivation>  vertexActivation) = 0;
			
			/*!
			 */ 
			virtual bool unregister(std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation>  stateActivation) = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::weak_ptr<PSSM::Semantics::StateMachines::StateMachineExecution > getExecution() const = 0;
			
			/*!
			 */
			virtual void setExecution(std::shared_ptr<PSSM::Semantics::StateMachines::StateMachineExecution> _execution_execution) = 0;
			/*!
			 */
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateConfiguration > getRootConfiguration() const = 0;
			
			/*!
			 */
			virtual void setRootConfiguration(std::shared_ptr<PSSM::Semantics::StateMachines::StateConfiguration> _rootConfiguration_rootConfiguration) = 0;
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			std::weak_ptr<PSSM::Semantics::StateMachines::StateMachineExecution > m_execution;
			/*!
			 */
			std::shared_ptr<PSSM::Semantics::StateMachines::StateConfiguration > m_rootConfiguration;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			

			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) = 0;
			
			virtual void resolveReferences(const int featureID, std::list<std::shared_ptr<ecore::EObject> > references) = 0;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const = 0;
			
	};

}
#endif /* end of include guard: PSSM_SEMANTICS_STATEMACHINES_STATEMACHINECONFIGURATION_HPP */

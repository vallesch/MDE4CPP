#############################################################################
#																	        #
#		 			CMakeList created by ecore4CPP Generator				# 
#																	        #
#############################################################################

# C++ project of model fUML.ecore, generated by Ecore4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(fUML)

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 14)

IF(("$ENV{DEBUG_MESSAGE_FUML}" EQUAL "1") AND (CMAKE_BUILD_TYPE MATCHES Debug))
	SET(ENABLED_DEBUG_MESSAGE " ")
ELSE()
	SET(ENABLED_DEBUG_MESSAGE " -DNDEBUG")
ENDIF()
IF("$ENV{DEBUG_MESSAGE_ACTIVITY_DEBUGGER}" EQUAL "1")
	SET(ENABLED_DEBUG_MESSAGE "${ENABLED_DEBUG_MESSAGE} -DACTIVITY_DEBUG_ON")
ENDIF()

SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fmax-errors=5")
SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb ${ENABLED_DEBUG_MESSAGE}")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3  ${ENABLED_DEBUG_MESSAGE}")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
	impl/FUMLFactoryImpl.cpp
	FUMLFactory.cpp
	impl/FUMLPackageImpl.cpp
	impl/FUMLPackageImpl_Creation.cpp
	impl/FUMLPackageImpl_Initialization.cpp
	FUMLPackage.cpp
	impl/FUMLPluginImpl.cpp
	FUMLPlugin.cpp
	impl/AcceptEventActionActivationImpl.cpp
	impl/AcceptEventActionEventAccepterImpl.cpp
	impl/ActionActivationImpl.cpp
	impl/ActivityEdgeInstanceImpl.cpp
	impl/ActivityExecutionImpl.cpp
	impl/ActivityFinalNodeActivationImpl.cpp
	impl/ActivityNodeActivationImpl.cpp
	impl/ActivityNodeActivationGroupImpl.cpp
	impl/ActivityParameterNodeActivationImpl.cpp
	impl/AddStructuralFeatureValueActionActivationImpl.cpp
	impl/BooleanValueImpl.cpp
	impl/CallActionActivationImpl.cpp
	impl/CallBehaviorActionActivationImpl.cpp
	impl/CallOperationActionActivationImpl.cpp
	impl/CentralBufferNodeActivationImpl.cpp
	impl/ChoiceStrategyImpl.cpp
	impl/ClassifierBehaviorExecutionImpl.cpp
	impl/ClassifierBehaviorExecutionActivityImpl.cpp
	impl/ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1Impl.cpp
	impl/ClauseActivationImpl.cpp
	impl/ClearAssociationActionActivationImpl.cpp
	impl/ClearStructuralFeatureActionActivationImpl.cpp
	impl/CompoundValueImpl.cpp
	impl/ConditionalNodeActivationImpl.cpp
	impl/ControlNodeActivationImpl.cpp
	impl/ControlTokenImpl.cpp
	impl/CreateLinkActionActivationImpl.cpp
	impl/CreateObjectActionActivationImpl.cpp
	impl/DataStoreNodeActivationImpl.cpp
	impl/DataValueImpl.cpp
	impl/DecisionNodeActivationImpl.cpp
	impl/DestroyLinkActionActivationImpl.cpp
	impl/DestroyObjectActionActivationImpl.cpp
	impl/DispatchStrategyImpl.cpp
	impl/EnumerationValueImpl.cpp
	impl/EvaluationImpl.cpp
	impl/EventAccepterImpl.cpp
	impl/EventDispatchLoopImpl.cpp
	impl/EventOccurrenceImpl.cpp
	impl/ExecutionImpl.cpp
	impl/ExecutionFactoryImpl.cpp
	impl/ExecutionFactoryL1Impl.cpp
	impl/ExecutionFactoryL2Impl.cpp
	impl/ExecutionFactoryL3Impl.cpp
	impl/ExecutorImpl.cpp
	impl/ExpansionActivationGroupImpl.cpp
	impl/ExpansionNodeActivationImpl.cpp
	impl/ExpansionRegionActivationImpl.cpp
	impl/ExtensionalValueImpl.cpp
	impl/ExtensionalValueListImpl.cpp
	impl/FIFOGetNextEventStrategyImpl.cpp
	impl/FeatureValueImpl.cpp
	impl/FirstChoiceStrategyImpl.cpp
	impl/FlowFinalNodeActivationImpl.cpp
	impl/ForkNodeActivationImpl.cpp
	impl/ForkedTokenImpl.cpp
	impl/GetNextEventStrategyImpl.cpp
	impl/InitialNodeActivationImpl.cpp
	impl/InputPinActivationImpl.cpp
	impl/InstanceValueEvaluationImpl.cpp
	impl/IntegerValueImpl.cpp
	impl/InvocationActionActivationImpl.cpp
	impl/JoinNodeActivationImpl.cpp
	impl/LinkImpl.cpp
	impl/LinkActionActivationImpl.cpp
	impl/LiteralBooleanEvaluationImpl.cpp
	impl/LiteralEvaluationImpl.cpp
	impl/LiteralIntegerEvaluationImpl.cpp
	impl/LiteralNullEvaluationImpl.cpp
	impl/LiteralRealEvaluationImpl.cpp
	impl/LiteralStringEvaluationImpl.cpp
	impl/LiteralUnlimitedNaturalEvaluationImpl.cpp
	impl/LocusImpl.cpp
	impl/LoopNodeActivationImpl.cpp
	impl/MergeNodeActivationImpl.cpp
	impl/ObjectImpl.cpp
	impl/ObjectActivationImpl.cpp
	impl/ObjectNodeActivationImpl.cpp
	impl/ObjectTokenImpl.cpp
	impl/OfferImpl.cpp
	impl/OpaqueBehaviorExecutionImpl.cpp
	impl/OutputPinActivationImpl.cpp
	impl/ParameterValueImpl.cpp
	impl/PinActivationImpl.cpp
	impl/PrimitiveValueImpl.cpp
	impl/ReadExtentActionActivationImpl.cpp
	impl/ReadIsClassifiedObjectActionActivationImpl.cpp
	impl/ReadLinkActionActivationImpl.cpp
	impl/ReadSelfActionActivationImpl.cpp
	impl/ReadStructuralFeatureActionActivationImpl.cpp
	impl/RealValueImpl.cpp
	impl/ReclassifyObjectActionActivationImpl.cpp
	impl/RedefinitionBasedDispatchStrategyImpl.cpp
	impl/ReduceActionActivationImpl.cpp
	impl/ReferenceImpl.cpp
	impl/RemoveStructuralFeatureValueActivationImpl.cpp
	impl/SemanticStrategyImpl.cpp
	impl/SemanticVisitorImpl.cpp
	impl/SendSignalActionActivationImpl.cpp
	impl/SignalInstanceImpl.cpp
	impl/StartClassifierBehaviorActionActivationImpl.cpp
	impl/StartObjectBehaviorActionActivationImpl.cpp
	impl/StringValueImpl.cpp
	impl/StructuralFeatureActionActivationImpl.cpp
	impl/StructuredActivityNodeActivationImpl.cpp
	impl/StructuredValueImpl.cpp
	impl/TestIdentityActionActivationImpl.cpp
	impl/TokenImpl.cpp
	impl/TokenSetImpl.cpp
	impl/UnlimitedNaturalValueImpl.cpp
	impl/ValueImpl.cpp
	impl/ValueSpecificActionActivationImpl.cpp
	impl/ValuesImpl.cpp
	impl/WriteLinkActionActivationImpl.cpp
	impl/WriteStructuralFeatureActionActivationImpl.cpp
	#${MDE4CPP_HOME}/application/include/util/ProfileCallCount.cpp
)

INCLUDE_DIRECTORIES(
	../
	${MDE4CPP_HOME}/application/include
)

# Apple specific stuff
if(APPLE)
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup")
endif(APPLE)

IF(UNIX AND NOT APPLE)
    # for Linux, BSD, Solaris, Minix
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_DEBUG umld.so ${MDE4CPP_HOME}/application/bin)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_RELEASE uml.so ${MDE4CPP_HOME}/application/bin)
		
	ENDIF()
ELSEIF(APPLE)
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_DEBUG umld.dylib ${MDE4CPP_HOME}/application/bin)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_RELEASE uml.dylib ${MDE4CPP_HOME}/application/bin)
		
	ENDIF()
ELSE()
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UML_DEBUG umld ${MDE4CPP_HOME}/application/lib)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UML_RELEASE uml ${MDE4CPP_HOME}/application/lib)
		
	ENDIF()
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCE_FILES})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}
		debug ${ECORE_DEBUG}
		debug ${UML_DEBUG}
	)
ELSE()
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}
		optimized ${ECORE_RELEASE}
		optimized ${UML_RELEASE}
	)
ENDIF()

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME}
#-----------------------------------------------------

INSTALL(TARGETS ${PROJECT_NAME}
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
)

INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/${PROJECT_NAME}
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)

//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUMLPACKAGEIMPL_HPP
#define FUMLPACKAGEIMPL_HPP

#include "ecore/EcorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "fUML/FUMLPackage.hpp"

namespace fUML 
{	class AcceptEventActionActivation;
	class AcceptEventActionEventAccepter;
	class ActionActivation;
	class ActivityEdgeInstance;
	class ActivityExecution;
	class ActivityFinalNodeActivation;
	class ActivityNodeActivation;
	class ActivityNodeActivationGroup;
	class ActivityParameterNodeActivation;
	class AddStructuralFeatureValueActionActivation;
	class BooleanValue;
	class CallActionActivation;
	class CallBehaviorActionActivation;
	class CallOperationActionActivation;
	class CentralBufferNodeActivation;
	class ChoiceStrategy;
	class ClassifierBehaviorExecution;
	class ClassifierBehaviorExecutionActivity;
	class ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1;
	class ClauseActivation;
	class ClearAssociationActionActivation;
	class ClearStructuralFeatureActionActivation;
	class CompoundValue;
	class ConditionalNodeActivation;
	class ControlNodeActivation;
	class ControlToken;
	class CreateLinkActionActivation;
	class CreateObjectActionActivation;
	class DataStoreNodeActivation;
	class DataValue;
	class DecisionNodeActivation;
	class DestroyLinkActionActivation;
	class DestroyObjectActionActivation;
	class DispatchStrategy;
	class EnumerationValue;
	class Evaluation;
	class EventAccepter;
	class EventDispatchLoop;
	class EventOccurrence;
	class Execution;
	class ExecutionFactory;
	class ExecutionFactoryL1;
	class ExecutionFactoryL2;
	class ExecutionFactoryL3;
	class Executor;
	class ExpansionActivationGroup;
	class ExpansionNodeActivation;
	class ExpansionRegionActivation;
	class ExtensionalValue;
	class ExtensionalValueList;
	class FIFOGetNextEventStrategy;
	class FeatureValue;
	class FirstChoiceStrategy;
	class FlowFinalNodeActivation;
	class ForkNodeActivation;
	class ForkedToken;
	class GetNextEventStrategy;
	class InitialNodeActivation;
	class InputPinActivation;
	class InstanceValueEvaluation;
	class IntegerValue;
	class InvocationActionActivation;
	class JoinNodeActivation;
	class Link;
	class LinkActionActivation;
	class LiteralBooleanEvaluation;
	class LiteralEvaluation;
	class LiteralIntegerEvaluation;
	class LiteralNullEvaluation;
	class LiteralRealEvaluation;
	class LiteralStringEvaluation;
	class LiteralUnlimitedNaturalEvaluation;
	class Locus;
	class LoopNodeActivation;
	class MergeNodeActivation;
	class Object;
	class ObjectActivation;
	class ObjectNodeActivation;
	class ObjectToken;
	class Offer;
	class OpaqueBehaviorExecution;
	class OutputPinActivation;
	class ParameterValue;
	class PinActivation;
	class PrimitiveValue;
	class ReadExtentActionActivation;
	class ReadIsClassifiedObjectActionActivation;
	class ReadLinkActionActivation;
	class ReadSelfActionActivation;
	class ReadStructuralFeatureActionActivation;
	class RealValue;
	class ReclassifyObjectActionActivation;
	class RedefinitionBasedDispatchStrategy;
	class ReduceActionActivation;
	class Reference;
	class RemoveStructuralFeatureValueActivation;
	class SemanticStrategy;
	class SemanticVisitor;
	class SendSignalActionActivation;
	class SignalInstance;
	class StartClassifierBehaviorActionActivation;
	class StartObjectBehaviorActionActivation;
	class StringValue;
	class StructuralFeatureActionActivation;
	class StructuredActivityNodeActivation;
	class StructuredValue;
	class TestIdentityActionActivation;
	class Token;
	class TokenSet;
	class UnlimitedNaturalValue;
	class Value;
	class ValueSpecificActionActivation;
	class Values;
	class WriteLinkActionActivation;
	class WriteStructuralFeatureActionActivation;
}

namespace ecore
{
	class EcoreFactory;
}


namespace fUML
{
	class FUMLPackageImpl : public ecore::EPackageImpl ,virtual public FUMLPackage
	{
		private:    
			FUMLPackageImpl(FUMLPackageImpl const&) = delete;
			FUMLPackageImpl& operator=(FUMLPackageImpl const&) = delete;

		protected:
			FUMLPackageImpl();

		public:
			virtual ~FUMLPackageImpl();

			// Begin Class AcceptEventActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAcceptEventActionActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getAcceptEventActionActivation_EAttribute_waiting() const ;
			
			virtual std::shared_ptr<ecore::EReference> getAcceptEventActionActivation_EReference_eventAccepter() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getAcceptEventActionActivation_EOperation_accept_SignalInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getAcceptEventActionActivation_EOperation_match_SignalInstance() const ;
			
			// End Class AcceptEventActionActivation

			// Begin Class AcceptEventActionEventAccepter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAcceptEventActionEventAccepter_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getAcceptEventActionEventAccepter_EReference_actionActivation() const ;
			
			
			// End Class AcceptEventActionEventAccepter

			// Begin Class ActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActionActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getActionActivation_EAttribute_firing() const ;
			
			virtual std::shared_ptr<ecore::EReference> getActionActivation_EReference_inputPinActivation() const ;
			virtual std::shared_ptr<ecore::EReference> getActionActivation_EReference_outputPinActivation() const ;
			virtual std::shared_ptr<ecore::EReference> getActionActivation_EReference_pinActivation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_addOutgoingEdge_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_addPinActivation_PinActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_completeAction() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_createNodeActivations() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_doAction() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_fire_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_getTokens_InputPin() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_isFirng() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_isReady() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_isSourceFor_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_makeBooleanValue_EBoolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_putToken_OutputPin_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_putTokens_OutputPin_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_retrievePinActivation_Pin() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_run() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_sendOffers() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_takeOfferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_takeTokens_InputPin() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_terminate() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionActivation_EOperation_valueParticipatesInLink_Value_Link() const ;
			
			// End Class ActionActivation

			// Begin Class ActivityEdgeInstance
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityEdgeInstance_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActivityEdgeInstance_EReference_edge() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdgeInstance_EReference_group() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdgeInstance_EReference_offers() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdgeInstance_EReference_source() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdgeInstance_EReference_target() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityEdgeInstance_EOperation_countOfferedValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityEdgeInstance_EOperation_getOfferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityEdgeInstance_EOperation_hasOffer() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityEdgeInstance_EOperation_sendOffer_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityEdgeInstance_EOperation_takeOfferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityEdgeInstance_EOperation_takeOfferedTokens_EInt() const ;
			
			// End Class ActivityEdgeInstance

			// Begin Class ActivityExecution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityExecution_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActivityExecution_EReference_activationGroup() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityExecution_EOperation_execute() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityExecution_EOperation_new_() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityExecution_EOperation_terminate() const ;
			
			// End Class ActivityExecution

			// Begin Class ActivityFinalNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityFinalNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getActivityFinalNodeActivation_EOperation_fire_Token() const ;
			
			// End Class ActivityFinalNodeActivation

			// Begin Class ActivityNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityNodeActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getActivityNodeActivation_EAttribute_running() const ;
			
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivation_EReference_group() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivation_EReference_heldTokens() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivation_EReference_incomingEdges() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivation_EReference_node() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivation_EReference_outgoingEdges() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_addIncomingEdge_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_addOutgoingEdge_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_addToken_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_addTokens_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_clearTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_createEdgeInstances() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_createNodeActivations() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_fire_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_getActivityExecution() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_getExecutionContext() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_getExecutionLocus() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_getNodeActivation_ActivityNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_getRunning() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_getTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_isReady() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_isSourceFor_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_recieveOffer() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_removeToken_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_resume() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_run() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_sendOffers_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_suspend() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_takeOfferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_takeTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivation_EOperation_terminate() const ;
			
			// End Class ActivityNodeActivation

			// Begin Class ActivityNodeActivationGroup
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityNodeActivationGroup_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivationGroup_EReference_activityExecution() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivationGroup_EReference_containingNodeActivation() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivationGroup_EReference_edgeInstances() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivationGroup_EReference_nodeActivations() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNodeActivationGroup_EReference_suspendedActivations() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_activate_ActivityNode_ActivityEdge() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_addEdgeInstance_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_addNodeActivation_ActivityNodeActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_checkIncomingEdges_ActivityEdgeInstance_ActivityNodeActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_createEdgeInstance_ActivityEdge() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_createNodeActivation_ActivityNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_createNodeActivations_ActivityNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_getNodeActivation_ActivityNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_getOutputParameterNodeActivations() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_hasSourceFor_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_isSuspended() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_resume_ActivityNodeActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_retrieveActivityExecution() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_run_ActivityNodeActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_runNodes_ActivityNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_suspend_ActivityNodeActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityNodeActivationGroup_EOperation_terminateAll() const ;
			
			// End Class ActivityNodeActivationGroup

			// Begin Class ActivityParameterNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityParameterNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getActivityParameterNodeActivation_EOperation_clearTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityParameterNodeActivation_EOperation_fire_Token() const ;
			
			// End Class ActivityParameterNodeActivation

			// Begin Class AddStructuralFeatureValueActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAddStructuralFeatureValueActionActivation_EClass() const ;
			
			
			
			
			// End Class AddStructuralFeatureValueActionActivation

			// Begin Class BooleanValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBooleanValue_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getBooleanValue_EAttribute_value() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getBooleanValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getBooleanValue_EOperation_specify() const ;
			virtual std::shared_ptr<ecore::EOperation> getBooleanValue_EOperation_toString() const ;
			
			// End Class BooleanValue

			// Begin Class CallActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallActionActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCallActionActivation_EReference_callExecutions() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCallActionActivation_EOperation_doAction() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallActionActivation_EOperation_getCallExecution() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallActionActivation_EOperation_removeCallExecution_Execution() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallActionActivation_EOperation_terminate() const ;
			
			// End Class CallActionActivation

			// Begin Class CallBehaviorActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallBehaviorActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getCallBehaviorActionActivation_EOperation_getCallExecution() const ;
			
			// End Class CallBehaviorActionActivation

			// Begin Class CallOperationActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallOperationActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getCallOperationActionActivation_EOperation_getCallExecution() const ;
			
			// End Class CallOperationActionActivation

			// Begin Class CentralBufferNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCentralBufferNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getCentralBufferNodeActivation_EOperation_fire_Token() const ;
			
			// End Class CentralBufferNodeActivation

			// Begin Class ChoiceStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getChoiceStrategy_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getChoiceStrategy_EOperation_choose_EInt() const ;
			virtual std::shared_ptr<ecore::EOperation> getChoiceStrategy_EOperation_retrieveName() const ;
			
			// End Class ChoiceStrategy

			// Begin Class ClassifierBehaviorExecution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClassifierBehaviorExecution_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getClassifierBehaviorExecution_EReference_classifier() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifierBehaviorExecution_EReference_execution() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifierBehaviorExecution_EReference_objectActivation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClassifierBehaviorExecution_EOperation__startObjectBehavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifierBehaviorExecution_EOperation_execute_Class_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifierBehaviorExecution_EOperation_terminate() const ;
			
			// End Class ClassifierBehaviorExecution

			// Begin Class ClassifierBehaviorExecutionActivity
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClassifierBehaviorExecutionActivity_EClass() const ;
			
			
			
			
			// End Class ClassifierBehaviorExecutionActivity

			// Begin Class ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1_EClass() const ;
			
			
			
			
			// End Class ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1

			// Begin Class ClauseActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClauseActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getClauseActivation_EReference_clause() const ;
			virtual std::shared_ptr<ecore::EReference> getClauseActivation_EReference_conditionalNodeActivation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClauseActivation_EOperation_getDecision() const ;
			virtual std::shared_ptr<ecore::EOperation> getClauseActivation_EOperation_getPredecessors() const ;
			virtual std::shared_ptr<ecore::EOperation> getClauseActivation_EOperation_getSuccessors() const ;
			virtual std::shared_ptr<ecore::EOperation> getClauseActivation_EOperation_isReady() const ;
			virtual std::shared_ptr<ecore::EOperation> getClauseActivation_EOperation_recieveControl() const ;
			virtual std::shared_ptr<ecore::EOperation> getClauseActivation_EOperation_runTest() const ;
			virtual std::shared_ptr<ecore::EOperation> getClauseActivation_EOperation_selectBody() const ;
			
			// End Class ClauseActivation

			// Begin Class ClearAssociationActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClearAssociationActionActivation_EClass() const ;
			
			
			
			
			// End Class ClearAssociationActionActivation

			// Begin Class ClearStructuralFeatureActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClearStructuralFeatureActionActivation_EClass() const ;
			
			
			
			
			// End Class ClearStructuralFeatureActionActivation

			// Begin Class CompoundValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCompoundValue_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCompoundValue_EReference_featureValues() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCompoundValue_EOperation_assignFeatureValue_StructuralFeature_EInt() const ;
			virtual std::shared_ptr<ecore::EOperation> getCompoundValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getCompoundValue_EOperation_removeFeatureValues_Classifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getCompoundValue_EOperation_retrieveFeatureValue_StructuralFeature() const ;
			virtual std::shared_ptr<ecore::EOperation> getCompoundValue_EOperation_retrieveFeatureValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getCompoundValue_EOperation_toString() const ;
			
			// End Class CompoundValue

			// Begin Class ConditionalNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConditionalNodeActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getConditionalNodeActivation_EReference_clauseActivations() const ;
			virtual std::shared_ptr<ecore::EReference> getConditionalNodeActivation_EReference_selectedClauses() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConditionalNodeActivation_EOperation_getClauseActivation_Clause() const ;
			virtual std::shared_ptr<ecore::EOperation> getConditionalNodeActivation_EOperation_runTest_Clause() const ;
			virtual std::shared_ptr<ecore::EOperation> getConditionalNodeActivation_EOperation_selectBody_Clause() const ;
			
			// End Class ConditionalNodeActivation

			// Begin Class ControlNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getControlNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getControlNodeActivation_EOperation_fire_Token() const ;
			
			// End Class ControlNodeActivation

			// Begin Class ControlToken
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getControlToken_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getControlToken_EOperation_equals_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getControlToken_EOperation_getValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getControlToken_EOperation_isControl() const ;
			
			// End Class ControlToken

			// Begin Class CreateLinkActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCreateLinkActionActivation_EClass() const ;
			
			
			
			
			// End Class CreateLinkActionActivation

			// Begin Class CreateObjectActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCreateObjectActionActivation_EClass() const ;
			
			
			
			
			// End Class CreateObjectActionActivation

			// Begin Class DataStoreNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDataStoreNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getDataStoreNodeActivation_EOperation_addToken_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getDataStoreNodeActivation_EOperation_removeToken_Token() const ;
			
			// End Class DataStoreNodeActivation

			// Begin Class DataValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDataValue_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDataValue_EReference_type() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDataValue_EOperation_getTypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getDataValue_EOperation_new_() const ;
			
			// End Class DataValue

			// Begin Class DecisionNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDecisionNodeActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDecisionNodeActivation_EReference_decisionInputExecution() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_executeDecisionInputBehavior_Value_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_fire_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_getDecisionInputFlowInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_getDecisionInputFlowValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_getDecisionValues_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_hasObjectFlowInput() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_isReady() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_removeJoinedControlTokens_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_takeOfferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_terminate() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNodeActivation_EOperation_test_ValueSpecification_Value() const ;
			
			// End Class DecisionNodeActivation

			// Begin Class DestroyLinkActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDestroyLinkActionActivation_EClass() const ;
			
			
			
			
			// End Class DestroyLinkActionActivation

			// Begin Class DestroyObjectActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDestroyObjectActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getDestroyObjectActionActivation_EOperation_destroyObject_Value_EBoolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getDestroyObjectActionActivation_EOperation_objectIsComposite_Reference_Link() const ;
			
			// End Class DestroyObjectActionActivation

			// Begin Class DispatchStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDispatchStrategy_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getDispatchStrategy_EOperation_dispatch_Object_Operation() const ;
			virtual std::shared_ptr<ecore::EOperation> getDispatchStrategy_EOperation_retrieveMethod_Object_Operation() const ;
			virtual std::shared_ptr<ecore::EOperation> getDispatchStrategy_EOperation_retrieveName() const ;
			
			// End Class DispatchStrategy

			// Begin Class EnumerationValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEnumerationValue_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getEnumerationValue_EReference_literal() const ;
			virtual std::shared_ptr<ecore::EReference> getEnumerationValue_EReference_type() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getEnumerationValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getEnumerationValue_EOperation_getTypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getEnumerationValue_EOperation_new_() const ;
			virtual std::shared_ptr<ecore::EOperation> getEnumerationValue_EOperation_specify() const ;
			virtual std::shared_ptr<ecore::EOperation> getEnumerationValue_EOperation_toString() const ;
			
			// End Class EnumerationValue

			// Begin Class Evaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEvaluation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getEvaluation_EReference_locus() const ;
			virtual std::shared_ptr<ecore::EReference> getEvaluation_EReference_specification() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getEvaluation_EOperation_evaluate() const ;
			
			// End Class Evaluation

			// Begin Class EventAccepter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEventAccepter_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getEventAccepter_EOperation_accept_SignalInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getEventAccepter_EOperation_match_SignalInstance() const ;
			
			// End Class EventAccepter

			// Begin Class EventDispatchLoop
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEventDispatchLoop_EClass() const ;
			
			
			
			
			// End Class EventDispatchLoop

			// Begin Class EventOccurrence
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEventOccurrence_EClass() const ;
			
			
			
			
			// End Class EventOccurrence

			// Begin Class Execution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecution_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecution_EReference_context() const ;
			virtual std::shared_ptr<ecore::EReference> getExecution_EReference_parameterValues() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExecution_EOperation_execute() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecution_EOperation_getBehavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecution_EOperation_getOutputParameterValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecution_EOperation_getParameterValue_Parameter() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecution_EOperation_new_() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecution_EOperation_setParameterValue_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecution_EOperation_terminate() const ;
			
			// End Class Execution

			// Begin Class ExecutionFactory
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionFactory_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_EReference_builtInTypes() const ;
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_EReference_locus() const ;
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_EReference_primitiveBehaviorPrototypes() const ;
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_EReference_strategies() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_addBuiltInType_PrimitiveType() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_addPrimitiveBehaviorPrototype_OpaqueBehaviorExecution() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_assignStrategy_SemanticStrategy() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_createEvaluation_ValueSpecification() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_createExecution_Behavior_Object() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_getBuiltInType_EString() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_getStrategy_EString() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_getStrategyIndex_EString() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_instantiateOpaqueBehaviorExecution_OpaqueBehavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_EOperation_instantiateVisitor_Element() const ;
			
			// End Class ExecutionFactory

			// Begin Class ExecutionFactoryL1
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionFactoryL1_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactoryL1_EOperation_instantiateVisitor_Element() const ;
			
			// End Class ExecutionFactoryL1

			// Begin Class ExecutionFactoryL2
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionFactoryL2_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactoryL2_EOperation_instantiateVisitor_Element() const ;
			
			// End Class ExecutionFactoryL2

			// Begin Class ExecutionFactoryL3
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionFactoryL3_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactoryL3_EOperation_instantiateVisitor_Element() const ;
			
			// End Class ExecutionFactoryL3

			// Begin Class Executor
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutor_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecutor_EReference_locus() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExecutor_EOperation_evaluate_ValueSpecification() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutor_EOperation_execute_Behavior_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getExecutor_EOperation_start_Class_ParameterValue() const ;
			
			// End Class Executor

			// Begin Class ExpansionActivationGroup
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExpansionActivationGroup_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExpansionActivationGroup_EReference_regionActivation() const ;
			
			
			// End Class ExpansionActivationGroup

			// Begin Class ExpansionNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExpansionNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getExpansionNodeActivation_EOperation_getExpansionRegionActivation() const ;
			
			// End Class ExpansionNodeActivation

			// Begin Class ExpansionRegionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExpansionRegionActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExpansionRegionActivation_EReference_activationGroups() const ;
			virtual std::shared_ptr<ecore::EReference> getExpansionRegionActivation_EReference_inputExpansionTokens() const ;
			virtual std::shared_ptr<ecore::EReference> getExpansionRegionActivation_EReference_inputTokens() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExpansionRegionActivation_EOperation_doStructuredActivity() const ;
			virtual std::shared_ptr<ecore::EOperation> getExpansionRegionActivation_EOperation_getExpansionNodeActivation_ExpansionNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getExpansionRegionActivation_EOperation_numberOfValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getExpansionRegionActivation_EOperation_runGroup_ExpansionActivationGroup() const ;
			
			// End Class ExpansionRegionActivation

			// Begin Class ExtensionalValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtensionalValue_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExtensionalValue_EReference_locus() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValue_EOperation_destroy() const ;
			
			// End Class ExtensionalValue

			// Begin Class ExtensionalValueList
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtensionalValueList_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_EOperation_addValue_ExtensionalValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_EOperation_addValue_ExtensionalValue_EInt() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_EOperation_getValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_EOperation_removeValue_EInt() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_EOperation_setValue_ExtensionalValue_EInt() const ;
			
			// End Class ExtensionalValueList

			// Begin Class FIFOGetNextEventStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFIFOGetNextEventStrategy_EClass() const ;
			
			
			
			
			// End Class FIFOGetNextEventStrategy

			// Begin Class FeatureValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFeatureValue_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getFeatureValue_EAttribute_position() const ;
			
			virtual std::shared_ptr<ecore::EReference> getFeatureValue_EReference_feature() const ;
			virtual std::shared_ptr<ecore::EReference> getFeatureValue_EReference_values() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getFeatureValue_EOperation_hasEqualValues_FeatureValue() const ;
			
			// End Class FeatureValue

			// Begin Class FirstChoiceStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFirstChoiceStrategy_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getFirstChoiceStrategy_EOperation_choose_EInt() const ;
			
			// End Class FirstChoiceStrategy

			// Begin Class FlowFinalNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFlowFinalNodeActivation_EClass() const ;
			
			
			
			
			// End Class FlowFinalNodeActivation

			// Begin Class ForkNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getForkNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getForkNodeActivation_EOperation_fire_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getForkNodeActivation_EOperation_terminate() const ;
			
			// End Class ForkNodeActivation

			// Begin Class ForkedToken
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getForkedToken_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getForkedToken_EAttribute_baseTokenIsWithdrawn() const ;
			virtual std::shared_ptr<ecore::EAttribute> getForkedToken_EAttribute_remainingOffersCount() const ;
			
			virtual std::shared_ptr<ecore::EReference> getForkedToken_EReference_baseToken() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getForkedToken_EOperation_equals_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getForkedToken_EOperation_getValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getForkedToken_EOperation_isControl() const ;
			virtual std::shared_ptr<ecore::EOperation> getForkedToken_EOperation_withdraw() const ;
			
			// End Class ForkedToken

			// Begin Class GetNextEventStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getGetNextEventStrategy_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getGetNextEventStrategy_EOperation_retrieveNextEvent_ObjectActivation() const ;
			
			// End Class GetNextEventStrategy

			// Begin Class InitialNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInitialNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getInitialNodeActivation_EOperation_fire_Token() const ;
			
			// End Class InitialNodeActivation

			// Begin Class InputPinActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInputPinActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getInputPinActivation_EOperation_isReady() const ;
			virtual std::shared_ptr<ecore::EOperation> getInputPinActivation_EOperation_recieveOffer() const ;
			
			// End Class InputPinActivation

			// Begin Class InstanceValueEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInstanceValueEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getInstanceValueEvaluation_EOperation_evaluate() const ;
			
			// End Class InstanceValueEvaluation

			// Begin Class IntegerValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getIntegerValue_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getIntegerValue_EAttribute_value() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getIntegerValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getIntegerValue_EOperation_specify() const ;
			virtual std::shared_ptr<ecore::EOperation> getIntegerValue_EOperation_toString() const ;
			
			// End Class IntegerValue

			// Begin Class InvocationActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInvocationActionActivation_EClass() const ;
			
			
			
			
			// End Class InvocationActionActivation

			// Begin Class JoinNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getJoinNodeActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getJoinNodeActivation_EOperation_isReady() const ;
			
			// End Class JoinNodeActivation

			// Begin Class Link
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLink_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getLink_EReference_type() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLink_EOperation_addTo_Locus() const ;
			virtual std::shared_ptr<ecore::EOperation> getLink_EOperation_getOtherFeatureValues_ExtensionalValue_Property() const ;
			virtual std::shared_ptr<ecore::EOperation> getLink_EOperation_getTypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getLink_EOperation_isMatchingLink_ExtensionalValue_Property() const ;
			
			// End Class Link

			// Begin Class LinkActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLinkActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLinkActionActivation_EOperation_endMatchesEndData_Link_LinkEndData() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkActionActivation_EOperation_getAssociation() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkActionActivation_EOperation_linkMatchesEndData_Link_LinkEndData() const ;
			
			// End Class LinkActionActivation

			// Begin Class LiteralBooleanEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralBooleanEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLiteralBooleanEvaluation_EOperation_evaluate() const ;
			
			// End Class LiteralBooleanEvaluation

			// Begin Class LiteralEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLiteralEvaluation_EOperation_getType_EString() const ;
			
			// End Class LiteralEvaluation

			// Begin Class LiteralIntegerEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralIntegerEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLiteralIntegerEvaluation_EOperation_evaluate() const ;
			
			// End Class LiteralIntegerEvaluation

			// Begin Class LiteralNullEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralNullEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLiteralNullEvaluation_EOperation_evaluate() const ;
			
			// End Class LiteralNullEvaluation

			// Begin Class LiteralRealEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralRealEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLiteralRealEvaluation_EOperation_evaluate() const ;
			
			// End Class LiteralRealEvaluation

			// Begin Class LiteralStringEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralStringEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLiteralStringEvaluation_EOperation_evaluate() const ;
			
			// End Class LiteralStringEvaluation

			// Begin Class LiteralUnlimitedNaturalEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralUnlimitedNaturalEvaluation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getLiteralUnlimitedNaturalEvaluation_EOperation_evaluate() const ;
			
			// End Class LiteralUnlimitedNaturalEvaluation

			// Begin Class Locus
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLocus_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getLocus_EReference_executor() const ;
			virtual std::shared_ptr<ecore::EReference> getLocus_EReference_extensionalValues() const ;
			virtual std::shared_ptr<ecore::EReference> getLocus_EReference_factory() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLocus_EOperation_add_ExtensionalValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getLocus_EOperation_assignExecutor_Executor() const ;
			virtual std::shared_ptr<ecore::EOperation> getLocus_EOperation_assignFactory_ExecutionFactory() const ;
			virtual std::shared_ptr<ecore::EOperation> getLocus_EOperation_conforms_Classifier_Classifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getLocus_EOperation_instantiate_Class() const ;
			virtual std::shared_ptr<ecore::EOperation> getLocus_EOperation_remove_ExtensionalValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getLocus_EOperation_retrieveExtent_Classifier() const ;
			
			// End Class Locus

			// Begin Class LoopNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLoopNodeActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getLoopNodeActivation_EReference_bodyOutputLists() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLoopNodeActivation_EOperation_makeLoopVariableList() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNodeActivation_EOperation_runBody() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNodeActivation_EOperation_runLoopVariables() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNodeActivation_EOperation_runTest() const ;
			
			// End Class LoopNodeActivation

			// Begin Class MergeNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMergeNodeActivation_EClass() const ;
			
			
			
			
			// End Class MergeNodeActivation

			// Begin Class Object
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObject_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getObject_EReference_objectActivation() const ;
			virtual std::shared_ptr<ecore::EReference> getObject_EReference_types() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getObject_EOperation__register_EventAccepter() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_EOperation_destroy() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_EOperation_dispatch_Operation() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_EOperation_new_() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_EOperation_send_SignalInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_EOperation_startBehavior_Class_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_EOperation_unregister_EventAccepter() const ;
			
			// End Class Object

			// Begin Class ObjectActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObjectActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getObjectActivation_EReference_classifierBehaviorExecutions() const ;
			virtual std::shared_ptr<ecore::EReference> getObjectActivation_EReference_eventPool() const ;
			virtual std::shared_ptr<ecore::EReference> getObjectActivation_EReference_object() const ;
			virtual std::shared_ptr<ecore::EReference> getObjectActivation_EReference_waitingEventAccepters() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation__register_EventAccepter() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation__send_EJavaObject() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation__startObjectBehavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation_dispatchNextEvent() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation_retrieveNextEvent() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation_send_SignalInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation_startBehavior_Class_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation_stop() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectActivation_EOperation_unregister_EventAccepter() const ;
			
			// End Class ObjectActivation

			// Begin Class ObjectNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObjectNodeActivation_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getObjectNodeActivation_EAttribute_offeredTokenCount() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_addToken_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_clearTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_countOfferedValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_countUnofferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_getUnofferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_removeToken_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_run() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_sendOffers_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_sendUnofferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_takeUnofferedTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNodeActivation_EOperation_terminate() const ;
			
			// End Class ObjectNodeActivation

			// Begin Class ObjectToken
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObjectToken_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getObjectToken_EReference_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getObjectToken_EOperation_equals_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectToken_EOperation_isControl() const ;
			
			// End Class ObjectToken

			// Begin Class Offer
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOffer_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getOffer_EReference_offeredTokens() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getOffer_EOperation_countOfferedVales() const ;
			virtual std::shared_ptr<ecore::EOperation> getOffer_EOperation_hasTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getOffer_EOperation_removeOfferedValues_EInt() const ;
			virtual std::shared_ptr<ecore::EOperation> getOffer_EOperation_removeWithdrawnTokens() const ;
			virtual std::shared_ptr<ecore::EOperation> getOffer_EOperation_retrieveOfferedTokens() const ;
			
			// End Class Offer

			// Begin Class OpaqueBehaviorExecution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOpaqueBehaviorExecution_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getOpaqueBehaviorExecution_EOperation_doBody_ParameterValue_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueBehaviorExecution_EOperation_execute() const ;
			
			// End Class OpaqueBehaviorExecution

			// Begin Class OutputPinActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOutputPinActivation_EClass() const ;
			
			
			
			
			// End Class OutputPinActivation

			// Begin Class ParameterValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getParameterValue_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getParameterValue_EReference_parameter() const ;
			virtual std::shared_ptr<ecore::EReference> getParameterValue_EReference_values() const ;
			
			
			// End Class ParameterValue

			// Begin Class PinActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPinActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getPinActivation_EReference_actionActivation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPinActivation_EOperation_fire_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getPinActivation_EOperation_takeOfferedTokens() const ;
			
			// End Class PinActivation

			// Begin Class PrimitiveValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPrimitiveValue_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getPrimitiveValue_EReference_type() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPrimitiveValue_EOperation_getTypes() const ;
			
			// End Class PrimitiveValue

			// Begin Class ReadExtentActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadExtentActionActivation_EClass() const ;
			
			
			
			
			// End Class ReadExtentActionActivation

			// Begin Class ReadIsClassifiedObjectActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadIsClassifiedObjectActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getReadIsClassifiedObjectActionActivation_EOperation_checkAllParents_Classifier_Classifier() const ;
			
			// End Class ReadIsClassifiedObjectActionActivation

			// Begin Class ReadLinkActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadLinkActionActivation_EClass() const ;
			
			
			
			
			// End Class ReadLinkActionActivation

			// Begin Class ReadSelfActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadSelfActionActivation_EClass() const ;
			
			
			
			
			// End Class ReadSelfActionActivation

			// Begin Class ReadStructuralFeatureActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadStructuralFeatureActionActivation_EClass() const ;
			
			
			
			
			// End Class ReadStructuralFeatureActionActivation

			// Begin Class RealValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRealValue_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getRealValue_EAttribute_value() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getRealValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getRealValue_EOperation_specify() const ;
			virtual std::shared_ptr<ecore::EOperation> getRealValue_EOperation_toString() const ;
			
			// End Class RealValue

			// Begin Class ReclassifyObjectActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReclassifyObjectActionActivation_EClass() const ;
			
			
			
			
			// End Class ReclassifyObjectActionActivation

			// Begin Class RedefinitionBasedDispatchStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRedefinitionBasedDispatchStrategy_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getRedefinitionBasedDispatchStrategy_EOperation_operationsMatch_Operation_Operation() const ;
			virtual std::shared_ptr<ecore::EOperation> getRedefinitionBasedDispatchStrategy_EOperation_retrieveMethod_Object_Operation() const ;
			
			// End Class RedefinitionBasedDispatchStrategy

			// Begin Class ReduceActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReduceActionActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReduceActionActivation_EReference_currentExecution() const ;
			
			
			// End Class ReduceActionActivation

			// Begin Class Reference
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReference_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReference_EReference_referent() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_assignFeatureValue_StructuralFeature_EInt() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_destroy() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_dispatch_Operation() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_getTypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_new_() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_retrieveFeatureValue_StructuralFeature() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_retrieveFeatureValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_send_SignalInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_startBehavior_Class_ParameterValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getReference_EOperation_toString() const ;
			
			// End Class Reference

			// Begin Class RemoveStructuralFeatureValueActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRemoveStructuralFeatureValueActivation_EClass() const ;
			
			
			
			
			// End Class RemoveStructuralFeatureValueActivation

			// Begin Class SemanticStrategy
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSemanticStrategy_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSemanticStrategy_EOperation_retrieveName() const ;
			
			// End Class SemanticStrategy

			// Begin Class SemanticVisitor
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSemanticVisitor_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSemanticVisitor_EOperation__beginIsolation() const ;
			virtual std::shared_ptr<ecore::EOperation> getSemanticVisitor_EOperation__endIsolation() const ;
			
			// End Class SemanticVisitor

			// Begin Class SendSignalActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSendSignalActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSendSignalActionActivation_EOperation_doAction() const ;
			
			// End Class SendSignalActionActivation

			// Begin Class SignalInstance
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSignalInstance_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSignalInstance_EReference_type() const ;
			
			
			// End Class SignalInstance

			// Begin Class StartClassifierBehaviorActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStartClassifierBehaviorActionActivation_EClass() const ;
			
			
			
			
			// End Class StartClassifierBehaviorActionActivation

			// Begin Class StartObjectBehaviorActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStartObjectBehaviorActionActivation_EClass() const ;
			
			
			
			
			// End Class StartObjectBehaviorActionActivation

			// Begin Class StringValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStringValue_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getStringValue_EAttribute_value() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getStringValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getStringValue_EOperation_specify() const ;
			virtual std::shared_ptr<ecore::EOperation> getStringValue_EOperation_toString() const ;
			
			// End Class StringValue

			// Begin Class StructuralFeatureActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStructuralFeatureActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureActionActivation_EOperation_getAssociation_StructuralFeature() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureActionActivation_EOperation_getMatchingLinks_Association_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureActionActivation_EOperation_getOppositeEnd_Association_StructuralFeature() const ;
			
			// End Class StructuralFeatureActionActivation

			// Begin Class StructuredActivityNodeActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStructuredActivityNodeActivation_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStructuredActivityNodeActivation_EReference_activationGroup() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_completeAction() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_createEdgeInstances() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_createNodeActivations() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_doAction() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_doStructuredActivity() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_getNodeActivation_ActivityNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_getPinValues_OutputPin() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_isSourceFor_ActivityEdgeInstance() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_isSuspended() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_makeActivityNodeList_ExecutableNode() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_putPinValues_OutputPin_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_resume() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_terminate() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNodeActivation_EOperation_terminateAll() const ;
			
			// End Class StructuredActivityNodeActivation

			// Begin Class StructuredValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStructuredValue_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getStructuredValue_EOperation_assignFeatureValue_StructuralFeature_EInt() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredValue_EOperation_createFeatureValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredValue_EOperation_retrieveFeatureValue_StructuralFeature() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredValue_EOperation_retrieveFeatureValues() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredValue_EOperation_specify() const ;
			
			// End Class StructuredValue

			// Begin Class TestIdentityActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTestIdentityActionActivation_EClass() const ;
			
			
			
			
			// End Class TestIdentityActionActivation

			// Begin Class Token
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getToken_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getToken_EAttribute_withdrawn() const ;
			
			virtual std::shared_ptr<ecore::EReference> getToken_EReference_holder() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getToken_EOperation_equals_Token() const ;
			virtual std::shared_ptr<ecore::EOperation> getToken_EOperation_getValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getToken_EOperation_isControl() const ;
			virtual std::shared_ptr<ecore::EOperation> getToken_EOperation_transfer_ActivityNodeActivation() const ;
			virtual std::shared_ptr<ecore::EOperation> getToken_EOperation_withdraw() const ;
			
			// End Class Token

			// Begin Class TokenSet
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTokenSet_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTokenSet_EReference_tokens() const ;
			
			
			// End Class TokenSet

			// Begin Class UnlimitedNaturalValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getUnlimitedNaturalValue_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getUnlimitedNaturalValue_EAttribute_value() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getUnlimitedNaturalValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getUnlimitedNaturalValue_EOperation_specify() const ;
			virtual std::shared_ptr<ecore::EOperation> getUnlimitedNaturalValue_EOperation_toString() const ;
			
			// End Class UnlimitedNaturalValue

			// Begin Class Value
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getValue_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getValue_EOperation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getValue_EOperation_getTypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getValue_EOperation_hasTypes_Classifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getValue_EOperation_objectId() const ;
			virtual std::shared_ptr<ecore::EOperation> getValue_EOperation_specify() const ;
			virtual std::shared_ptr<ecore::EOperation> getValue_EOperation_toString() const ;
			
			// End Class Value

			// Begin Class ValueSpecificActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getValueSpecificActionActivation_EClass() const ;
			
			
			
			
			// End Class ValueSpecificActionActivation

			// Begin Class Values
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getValues_EClass() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getValues_EReference_values() const ;
			
			
			// End Class Values

			// Begin Class WriteLinkActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getWriteLinkActionActivation_EClass() const ;
			
			
			
			
			// End Class WriteLinkActionActivation

			// Begin Class WriteStructuralFeatureActionActivation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getWriteStructuralFeatureActionActivation_EClass() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getWriteStructuralFeatureActionActivation_EOperation_position_Value_EInt() const ;
			
			// End Class WriteStructuralFeatureActionActivation

			

		private:
			std::shared_ptr<ecore::EClass> m_acceptEventActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_acceptEventActionEventAccepter_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_actionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_activityEdgeInstance_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_activityExecution_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_activityFinalNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_activityNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_activityNodeActivationGroup_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_activityParameterNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_addStructuralFeatureValueActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_booleanValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_callActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_callBehaviorActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_callOperationActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_centralBufferNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_choiceStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_classifierBehaviorExecution_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_classifierBehaviorExecutionActivity_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_classifierBehaviorExecutionActivity_OwnedBehaviorActivity1_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_clauseActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_clearAssociationActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_clearStructuralFeatureActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_compoundValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_conditionalNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_controlNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_controlToken_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_createLinkActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_createObjectActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_dataStoreNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_dataValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_decisionNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_destroyLinkActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_destroyObjectActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_dispatchStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_enumerationValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_evaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_eventAccepter_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_eventDispatchLoop_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_eventOccurrence_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_execution_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_executionFactory_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_executionFactoryL1_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_executionFactoryL2_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_executionFactoryL3_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_executor_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_expansionActivationGroup_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_expansionNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_expansionRegionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_extensionalValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_extensionalValueList_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_fIFOGetNextEventStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_featureValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_firstChoiceStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_flowFinalNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_forkNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_forkedToken_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_getNextEventStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_initialNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_inputPinActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_instanceValueEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_integerValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_invocationActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_joinNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_link_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_linkActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_literalBooleanEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_literalEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_literalIntegerEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_literalNullEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_literalRealEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_literalStringEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_literalUnlimitedNaturalEvaluation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_locus_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_loopNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_mergeNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_object_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_objectActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_objectNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_objectToken_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_offer_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_opaqueBehaviorExecution_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_outputPinActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_parameterValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_pinActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_primitiveValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_readExtentActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_readIsClassifiedObjectActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_readLinkActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_readSelfActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_readStructuralFeatureActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_realValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_reclassifyObjectActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_redefinitionBasedDispatchStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_reduceActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_reference_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_removeStructuralFeatureValueActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_semanticStrategy_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_semanticVisitor_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_sendSignalActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_signalInstance_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_startClassifierBehaviorActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_startObjectBehaviorActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_stringValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_structuralFeatureActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_structuredActivityNodeActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_structuredValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_testIdentityActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_token_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_tokenSet_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_unlimitedNaturalValue_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_value_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_valueSpecificActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_values_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_writeLinkActionActivation_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_writeStructuralFeatureActionActivation_EClass = nullptr;
			
			
			std::shared_ptr<ecore::EAttribute> m_forkedToken_EAttribute_baseTokenIsWithdrawn = nullptr;
			std::shared_ptr<ecore::EAttribute> m_actionActivation_EAttribute_firing = nullptr;
			std::shared_ptr<ecore::EAttribute> m_objectNodeActivation_EAttribute_offeredTokenCount = nullptr;
			std::shared_ptr<ecore::EAttribute> m_featureValue_EAttribute_position = nullptr;
			std::shared_ptr<ecore::EAttribute> m_forkedToken_EAttribute_remainingOffersCount = nullptr;
			std::shared_ptr<ecore::EAttribute> m_activityNodeActivation_EAttribute_running = nullptr;
			std::shared_ptr<ecore::EAttribute> m_unlimitedNaturalValue_EAttribute_value = nullptr;
			std::shared_ptr<ecore::EAttribute> m_stringValue_EAttribute_value = nullptr;
			std::shared_ptr<ecore::EAttribute> m_integerValue_EAttribute_value = nullptr;
			std::shared_ptr<ecore::EAttribute> m_realValue_EAttribute_value = nullptr;
			std::shared_ptr<ecore::EAttribute> m_booleanValue_EAttribute_value = nullptr;
			std::shared_ptr<ecore::EAttribute> m_acceptEventActionActivation_EAttribute_waiting = nullptr;
			std::shared_ptr<ecore::EAttribute> m_token_EAttribute_withdrawn = nullptr;
			
			std::shared_ptr<ecore::EReference> m_pinActivation_EReference_actionActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_acceptEventActionEventAccepter_EReference_actionActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_activityExecution_EReference_activationGroup = nullptr;
			std::shared_ptr<ecore::EReference> m_structuredActivityNodeActivation_EReference_activationGroup = nullptr;
			std::shared_ptr<ecore::EReference> m_expansionRegionActivation_EReference_activationGroups = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivationGroup_EReference_activityExecution = nullptr;
			std::shared_ptr<ecore::EReference> m_forkedToken_EReference_baseToken = nullptr;
			std::shared_ptr<ecore::EReference> m_loopNodeActivation_EReference_bodyOutputLists = nullptr;
			std::shared_ptr<ecore::EReference> m_executionFactory_EReference_builtInTypes = nullptr;
			std::shared_ptr<ecore::EReference> m_callActionActivation_EReference_callExecutions = nullptr;
			std::shared_ptr<ecore::EReference> m_classifierBehaviorExecution_EReference_classifier = nullptr;
			std::shared_ptr<ecore::EReference> m_objectActivation_EReference_classifierBehaviorExecutions = nullptr;
			std::shared_ptr<ecore::EReference> m_clauseActivation_EReference_clause = nullptr;
			std::shared_ptr<ecore::EReference> m_conditionalNodeActivation_EReference_clauseActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_clauseActivation_EReference_conditionalNodeActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivationGroup_EReference_containingNodeActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_execution_EReference_context = nullptr;
			std::shared_ptr<ecore::EReference> m_reduceActionActivation_EReference_currentExecution = nullptr;
			std::shared_ptr<ecore::EReference> m_decisionNodeActivation_EReference_decisionInputExecution = nullptr;
			std::shared_ptr<ecore::EReference> m_activityEdgeInstance_EReference_edge = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivationGroup_EReference_edgeInstances = nullptr;
			std::shared_ptr<ecore::EReference> m_acceptEventActionActivation_EReference_eventAccepter = nullptr;
			std::shared_ptr<ecore::EReference> m_objectActivation_EReference_eventPool = nullptr;
			std::shared_ptr<ecore::EReference> m_classifierBehaviorExecution_EReference_execution = nullptr;
			std::shared_ptr<ecore::EReference> m_locus_EReference_executor = nullptr;
			std::shared_ptr<ecore::EReference> m_locus_EReference_extensionalValues = nullptr;
			std::shared_ptr<ecore::EReference> m_locus_EReference_factory = nullptr;
			std::shared_ptr<ecore::EReference> m_featureValue_EReference_feature = nullptr;
			std::shared_ptr<ecore::EReference> m_compoundValue_EReference_featureValues = nullptr;
			std::shared_ptr<ecore::EReference> m_activityEdgeInstance_EReference_group = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivation_EReference_group = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivation_EReference_heldTokens = nullptr;
			std::shared_ptr<ecore::EReference> m_token_EReference_holder = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivation_EReference_incomingEdges = nullptr;
			std::shared_ptr<ecore::EReference> m_expansionRegionActivation_EReference_inputExpansionTokens = nullptr;
			std::shared_ptr<ecore::EReference> m_actionActivation_EReference_inputPinActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_expansionRegionActivation_EReference_inputTokens = nullptr;
			std::shared_ptr<ecore::EReference> m_enumerationValue_EReference_literal = nullptr;
			std::shared_ptr<ecore::EReference> m_executionFactory_EReference_locus = nullptr;
			std::shared_ptr<ecore::EReference> m_executor_EReference_locus = nullptr;
			std::shared_ptr<ecore::EReference> m_extensionalValue_EReference_locus = nullptr;
			std::shared_ptr<ecore::EReference> m_evaluation_EReference_locus = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivation_EReference_node = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivationGroup_EReference_nodeActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_objectActivation_EReference_object = nullptr;
			std::shared_ptr<ecore::EReference> m_object_EReference_objectActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_classifierBehaviorExecution_EReference_objectActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_offer_EReference_offeredTokens = nullptr;
			std::shared_ptr<ecore::EReference> m_activityEdgeInstance_EReference_offers = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivation_EReference_outgoingEdges = nullptr;
			std::shared_ptr<ecore::EReference> m_actionActivation_EReference_outputPinActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_parameterValue_EReference_parameter = nullptr;
			std::shared_ptr<ecore::EReference> m_execution_EReference_parameterValues = nullptr;
			std::shared_ptr<ecore::EReference> m_actionActivation_EReference_pinActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_executionFactory_EReference_primitiveBehaviorPrototypes = nullptr;
			std::shared_ptr<ecore::EReference> m_reference_EReference_referent = nullptr;
			std::shared_ptr<ecore::EReference> m_expansionActivationGroup_EReference_regionActivation = nullptr;
			std::shared_ptr<ecore::EReference> m_conditionalNodeActivation_EReference_selectedClauses = nullptr;
			std::shared_ptr<ecore::EReference> m_activityEdgeInstance_EReference_source = nullptr;
			std::shared_ptr<ecore::EReference> m_evaluation_EReference_specification = nullptr;
			std::shared_ptr<ecore::EReference> m_executionFactory_EReference_strategies = nullptr;
			std::shared_ptr<ecore::EReference> m_activityNodeActivationGroup_EReference_suspendedActivations = nullptr;
			std::shared_ptr<ecore::EReference> m_activityEdgeInstance_EReference_target = nullptr;
			std::shared_ptr<ecore::EReference> m_tokenSet_EReference_tokens = nullptr;
			std::shared_ptr<ecore::EReference> m_primitiveValue_EReference_type = nullptr;
			std::shared_ptr<ecore::EReference> m_link_EReference_type = nullptr;
			std::shared_ptr<ecore::EReference> m_enumerationValue_EReference_type = nullptr;
			std::shared_ptr<ecore::EReference> m_dataValue_EReference_type = nullptr;
			std::shared_ptr<ecore::EReference> m_signalInstance_EReference_type = nullptr;
			std::shared_ptr<ecore::EReference> m_object_EReference_types = nullptr;
			std::shared_ptr<ecore::EReference> m_objectToken_EReference_value = nullptr;
			std::shared_ptr<ecore::EReference> m_featureValue_EReference_values = nullptr;
			std::shared_ptr<ecore::EReference> m_parameterValue_EReference_values = nullptr;
			std::shared_ptr<ecore::EReference> m_values_EReference_values = nullptr;
			std::shared_ptr<ecore::EReference> m_objectActivation_EReference_waitingEventAccepters = nullptr;
			
			std::shared_ptr<ecore::EOperation> m_semanticVisitor_EOperation__beginIsolation = nullptr;
			std::shared_ptr<ecore::EOperation> m_semanticVisitor_EOperation__endIsolation = nullptr;
			std::shared_ptr<ecore::EOperation> m_object_EOperation__register_EventAccepter = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation__register_EventAccepter = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation__send_EJavaObject = nullptr;
			std::shared_ptr<ecore::EOperation> m_classifierBehaviorExecution_EOperation__startObjectBehavior = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation__startObjectBehavior = nullptr;
			std::shared_ptr<ecore::EOperation> m_eventAccepter_EOperation_accept_SignalInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_acceptEventActionActivation_EOperation_accept_SignalInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_activate_ActivityNode_ActivityEdge = nullptr;
			std::shared_ptr<ecore::EOperation> m_locus_EOperation_add_ExtensionalValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_addBuiltInType_PrimitiveType = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_addEdgeInstance_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_addIncomingEdge_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_addNodeActivation_ActivityNodeActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_addOutgoingEdge_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_addOutgoingEdge_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_addPinActivation_PinActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_addPrimitiveBehaviorPrototype_OpaqueBehaviorExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_link_EOperation_addTo_Locus = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_addToken_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_addToken_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_dataStoreNodeActivation_EOperation_addToken_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_addTokens_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_extensionalValueList_EOperation_addValue_ExtensionalValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_extensionalValueList_EOperation_addValue_ExtensionalValue_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_locus_EOperation_assignExecutor_Executor = nullptr;
			std::shared_ptr<ecore::EOperation> m_locus_EOperation_assignFactory_ExecutionFactory = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredValue_EOperation_assignFeatureValue_StructuralFeature_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_assignFeatureValue_StructuralFeature_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_compoundValue_EOperation_assignFeatureValue_StructuralFeature_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_assignStrategy_SemanticStrategy = nullptr;
			std::shared_ptr<ecore::EOperation> m_readIsClassifiedObjectActionActivation_EOperation_checkAllParents_Classifier_Classifier = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_checkIncomingEdges_ActivityEdgeInstance_ActivityNodeActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_choiceStrategy_EOperation_choose_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_firstChoiceStrategy_EOperation_choose_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_clearTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_clearTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityParameterNodeActivation_EOperation_clearTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_completeAction = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_completeAction = nullptr;
			std::shared_ptr<ecore::EOperation> m_locus_EOperation_conforms_Classifier_Classifier = nullptr;
			std::shared_ptr<ecore::EOperation> m_offer_EOperation_countOfferedVales = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityEdgeInstance_EOperation_countOfferedValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_countOfferedValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_countUnofferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_createEdgeInstance_ActivityEdge = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_createEdgeInstances = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_createEdgeInstances = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_createEvaluation_ValueSpecification = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_createExecution_Behavior_Object = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredValue_EOperation_createFeatureValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_createNodeActivation_ActivityNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_createNodeActivations_ActivityNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_createNodeActivations = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_createNodeActivations = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_createNodeActivations = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_destroy = nullptr;
			std::shared_ptr<ecore::EOperation> m_extensionalValue_EOperation_destroy = nullptr;
			std::shared_ptr<ecore::EOperation> m_object_EOperation_destroy = nullptr;
			std::shared_ptr<ecore::EOperation> m_destroyObjectActionActivation_EOperation_destroyObject_Value_EBoolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_dispatch_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_dispatchStrategy_EOperation_dispatch_Object_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_object_EOperation_dispatch_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation_dispatchNextEvent = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_doAction = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_doAction = nullptr;
			std::shared_ptr<ecore::EOperation> m_sendSignalActionActivation_EOperation_doAction = nullptr;
			std::shared_ptr<ecore::EOperation> m_callActionActivation_EOperation_doAction = nullptr;
			std::shared_ptr<ecore::EOperation> m_opaqueBehaviorExecution_EOperation_doBody_ParameterValue_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_doStructuredActivity = nullptr;
			std::shared_ptr<ecore::EOperation> m_expansionRegionActivation_EOperation_doStructuredActivity = nullptr;
			std::shared_ptr<ecore::EOperation> m_linkActionActivation_EOperation_endMatchesEndData_Link_LinkEndData = nullptr;
			std::shared_ptr<ecore::EOperation> m_value_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_compoundValue_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_unlimitedNaturalValue_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_stringValue_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_integerValue_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_realValue_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_booleanValue_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_enumerationValue_EOperation_equals_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_token_EOperation_equals_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectToken_EOperation_equals_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_forkedToken_EOperation_equals_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_controlToken_EOperation_equals_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_executor_EOperation_evaluate_ValueSpecification = nullptr;
			std::shared_ptr<ecore::EOperation> m_evaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_instanceValueEvaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_literalBooleanEvaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_literalIntegerEvaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_literalNullEvaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_literalStringEvaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_literalRealEvaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_literalUnlimitedNaturalEvaluation_EOperation_evaluate = nullptr;
			std::shared_ptr<ecore::EOperation> m_executor_EOperation_execute_Behavior_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_execution_EOperation_execute = nullptr;
			std::shared_ptr<ecore::EOperation> m_opaqueBehaviorExecution_EOperation_execute = nullptr;
			std::shared_ptr<ecore::EOperation> m_classifierBehaviorExecution_EOperation_execute_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityExecution_EOperation_execute = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_executeDecisionInputBehavior_Value_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityParameterNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_controlNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_forkNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_initialNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityFinalNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_pinActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_centralBufferNodeActivation_EOperation_fire_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_getActivityExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_linkActionActivation_EOperation_getAssociation = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuralFeatureActionActivation_EOperation_getAssociation_StructuralFeature = nullptr;
			std::shared_ptr<ecore::EOperation> m_execution_EOperation_getBehavior = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_getBuiltInType_EString = nullptr;
			std::shared_ptr<ecore::EOperation> m_callActionActivation_EOperation_getCallExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_callBehaviorActionActivation_EOperation_getCallExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_callOperationActionActivation_EOperation_getCallExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_conditionalNodeActivation_EOperation_getClauseActivation_Clause = nullptr;
			std::shared_ptr<ecore::EOperation> m_clauseActivation_EOperation_getDecision = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_getDecisionInputFlowInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_getDecisionInputFlowValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_getDecisionValues_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_getExecutionContext = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_getExecutionLocus = nullptr;
			std::shared_ptr<ecore::EOperation> m_expansionRegionActivation_EOperation_getExpansionNodeActivation_ExpansionNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_expansionNodeActivation_EOperation_getExpansionRegionActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuralFeatureActionActivation_EOperation_getMatchingLinks_Association_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_getNodeActivation_ActivityNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_getNodeActivation_ActivityNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_getNodeActivation_ActivityNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityEdgeInstance_EOperation_getOfferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuralFeatureActionActivation_EOperation_getOppositeEnd_Association_StructuralFeature = nullptr;
			std::shared_ptr<ecore::EOperation> m_link_EOperation_getOtherFeatureValues_ExtensionalValue_Property = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_getOutputParameterNodeActivations = nullptr;
			std::shared_ptr<ecore::EOperation> m_execution_EOperation_getOutputParameterValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_execution_EOperation_getParameterValue_Parameter = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_getPinValues_OutputPin = nullptr;
			std::shared_ptr<ecore::EOperation> m_clauseActivation_EOperation_getPredecessors = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_getRunning = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_getStrategy_EString = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_getStrategyIndex_EString = nullptr;
			std::shared_ptr<ecore::EOperation> m_clauseActivation_EOperation_getSuccessors = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_getTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_getTokens_InputPin = nullptr;
			std::shared_ptr<ecore::EOperation> m_literalEvaluation_EOperation_getType_EString = nullptr;
			std::shared_ptr<ecore::EOperation> m_value_EOperation_getTypes = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_getTypes = nullptr;
			std::shared_ptr<ecore::EOperation> m_primitiveValue_EOperation_getTypes = nullptr;
			std::shared_ptr<ecore::EOperation> m_link_EOperation_getTypes = nullptr;
			std::shared_ptr<ecore::EOperation> m_enumerationValue_EOperation_getTypes = nullptr;
			std::shared_ptr<ecore::EOperation> m_dataValue_EOperation_getTypes = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_getUnofferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_extensionalValueList_EOperation_getValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_token_EOperation_getValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_forkedToken_EOperation_getValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_controlToken_EOperation_getValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_featureValue_EOperation_hasEqualValues_FeatureValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_hasObjectFlowInput = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityEdgeInstance_EOperation_hasOffer = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_hasSourceFor_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_offer_EOperation_hasTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_value_EOperation_hasTypes_Classifier = nullptr;
			std::shared_ptr<ecore::EOperation> m_locus_EOperation_instantiate_Class = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_instantiateOpaqueBehaviorExecution_OpaqueBehavior = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactory_EOperation_instantiateVisitor_Element = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactoryL1_EOperation_instantiateVisitor_Element = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactoryL2_EOperation_instantiateVisitor_Element = nullptr;
			std::shared_ptr<ecore::EOperation> m_executionFactoryL3_EOperation_instantiateVisitor_Element = nullptr;
			std::shared_ptr<ecore::EOperation> m_token_EOperation_isControl = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectToken_EOperation_isControl = nullptr;
			std::shared_ptr<ecore::EOperation> m_forkedToken_EOperation_isControl = nullptr;
			std::shared_ptr<ecore::EOperation> m_controlToken_EOperation_isControl = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_isFirng = nullptr;
			std::shared_ptr<ecore::EOperation> m_link_EOperation_isMatchingLink_ExtensionalValue_Property = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_isReady = nullptr;
			std::shared_ptr<ecore::EOperation> m_joinNodeActivation_EOperation_isReady = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_isReady = nullptr;
			std::shared_ptr<ecore::EOperation> m_clauseActivation_EOperation_isReady = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_isReady = nullptr;
			std::shared_ptr<ecore::EOperation> m_inputPinActivation_EOperation_isReady = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_isSourceFor_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_isSourceFor_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_isSourceFor_ActivityEdgeInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_isSuspended = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_isSuspended = nullptr;
			std::shared_ptr<ecore::EOperation> m_linkActionActivation_EOperation_linkMatchesEndData_Link_LinkEndData = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_makeActivityNodeList_ExecutableNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_makeBooleanValue_EBoolean = nullptr;
			std::shared_ptr<ecore::EOperation> m_loopNodeActivation_EOperation_makeLoopVariableList = nullptr;
			std::shared_ptr<ecore::EOperation> m_eventAccepter_EOperation_match_SignalInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_acceptEventActionActivation_EOperation_match_SignalInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_enumerationValue_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_dataValue_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_object_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_execution_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityExecution_EOperation_new_ = nullptr;
			std::shared_ptr<ecore::EOperation> m_expansionRegionActivation_EOperation_numberOfValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_value_EOperation_objectId = nullptr;
			std::shared_ptr<ecore::EOperation> m_destroyObjectActionActivation_EOperation_objectIsComposite_Reference_Link = nullptr;
			std::shared_ptr<ecore::EOperation> m_redefinitionBasedDispatchStrategy_EOperation_operationsMatch_Operation_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_writeStructuralFeatureActionActivation_EOperation_position_Value_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_putPinValues_OutputPin_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_putToken_OutputPin_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_putTokens_OutputPin_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_clauseActivation_EOperation_recieveControl = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_recieveOffer = nullptr;
			std::shared_ptr<ecore::EOperation> m_inputPinActivation_EOperation_recieveOffer = nullptr;
			std::shared_ptr<ecore::EOperation> m_locus_EOperation_remove_ExtensionalValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_callActionActivation_EOperation_removeCallExecution_Execution = nullptr;
			std::shared_ptr<ecore::EOperation> m_compoundValue_EOperation_removeFeatureValues_Classifier = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_removeJoinedControlTokens_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_offer_EOperation_removeOfferedValues_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_removeToken_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_removeToken_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_dataStoreNodeActivation_EOperation_removeToken_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_extensionalValueList_EOperation_removeValue_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_offer_EOperation_removeWithdrawnTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_resume_ActivityNodeActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_resume = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_resume = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_retrieveActivityExecution = nullptr;
			std::shared_ptr<ecore::EOperation> m_locus_EOperation_retrieveExtent_Classifier = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredValue_EOperation_retrieveFeatureValue_StructuralFeature = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_retrieveFeatureValue_StructuralFeature = nullptr;
			std::shared_ptr<ecore::EOperation> m_compoundValue_EOperation_retrieveFeatureValue_StructuralFeature = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredValue_EOperation_retrieveFeatureValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_retrieveFeatureValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_compoundValue_EOperation_retrieveFeatureValues = nullptr;
			std::shared_ptr<ecore::EOperation> m_dispatchStrategy_EOperation_retrieveMethod_Object_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_redefinitionBasedDispatchStrategy_EOperation_retrieveMethod_Object_Operation = nullptr;
			std::shared_ptr<ecore::EOperation> m_semanticStrategy_EOperation_retrieveName = nullptr;
			std::shared_ptr<ecore::EOperation> m_choiceStrategy_EOperation_retrieveName = nullptr;
			std::shared_ptr<ecore::EOperation> m_dispatchStrategy_EOperation_retrieveName = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation_retrieveNextEvent = nullptr;
			std::shared_ptr<ecore::EOperation> m_getNextEventStrategy_EOperation_retrieveNextEvent_ObjectActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_offer_EOperation_retrieveOfferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_retrievePinActivation_Pin = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_run_ActivityNodeActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_run = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_run = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_run = nullptr;
			std::shared_ptr<ecore::EOperation> m_loopNodeActivation_EOperation_runBody = nullptr;
			std::shared_ptr<ecore::EOperation> m_expansionRegionActivation_EOperation_runGroup_ExpansionActivationGroup = nullptr;
			std::shared_ptr<ecore::EOperation> m_loopNodeActivation_EOperation_runLoopVariables = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_runNodes_ActivityNode = nullptr;
			std::shared_ptr<ecore::EOperation> m_clauseActivation_EOperation_runTest = nullptr;
			std::shared_ptr<ecore::EOperation> m_loopNodeActivation_EOperation_runTest = nullptr;
			std::shared_ptr<ecore::EOperation> m_conditionalNodeActivation_EOperation_runTest_Clause = nullptr;
			std::shared_ptr<ecore::EOperation> m_clauseActivation_EOperation_selectBody = nullptr;
			std::shared_ptr<ecore::EOperation> m_conditionalNodeActivation_EOperation_selectBody_Clause = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_send_SignalInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_object_EOperation_send_SignalInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation_send_SignalInstance = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityEdgeInstance_EOperation_sendOffer_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_sendOffers_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_sendOffers_Token = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_sendOffers = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_sendUnofferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_execution_EOperation_setParameterValue_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_extensionalValueList_EOperation_setValue_ExtensionalValue_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_value_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredValue_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_unlimitedNaturalValue_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_stringValue_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_integerValue_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_realValue_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_booleanValue_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_enumerationValue_EOperation_specify = nullptr;
			std::shared_ptr<ecore::EOperation> m_executor_EOperation_start_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_startBehavior_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_object_EOperation_startBehavior_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation_startBehavior_Class_ParameterValue = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation_stop = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_suspend_ActivityNodeActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_suspend = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityEdgeInstance_EOperation_takeOfferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityEdgeInstance_EOperation_takeOfferedTokens_EInt = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_takeOfferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_takeOfferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_takeOfferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_pinActivation_EOperation_takeOfferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_takeTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_takeTokens_InputPin = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_takeUnofferedTokens = nullptr;
			std::shared_ptr<ecore::EOperation> m_execution_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_classifierBehaviorExecution_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityExecution_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectNodeActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_forkNodeActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_callActionActivation_EOperation_terminate = nullptr;
			std::shared_ptr<ecore::EOperation> m_activityNodeActivationGroup_EOperation_terminateAll = nullptr;
			std::shared_ptr<ecore::EOperation> m_structuredActivityNodeActivation_EOperation_terminateAll = nullptr;
			std::shared_ptr<ecore::EOperation> m_decisionNodeActivation_EOperation_test_ValueSpecification_Value = nullptr;
			std::shared_ptr<ecore::EOperation> m_value_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_reference_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_compoundValue_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_unlimitedNaturalValue_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_stringValue_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_integerValue_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_realValue_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_booleanValue_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_enumerationValue_EOperation_toString = nullptr;
			std::shared_ptr<ecore::EOperation> m_token_EOperation_transfer_ActivityNodeActivation = nullptr;
			std::shared_ptr<ecore::EOperation> m_object_EOperation_unregister_EventAccepter = nullptr;
			std::shared_ptr<ecore::EOperation> m_objectActivation_EOperation_unregister_EventAccepter = nullptr;
			std::shared_ptr<ecore::EOperation> m_actionActivation_EOperation_valueParticipatesInLink_Value_Link = nullptr;
			std::shared_ptr<ecore::EOperation> m_token_EOperation_withdraw = nullptr;
			std::shared_ptr<ecore::EOperation> m_forkedToken_EOperation_withdraw = nullptr;
			

			friend class FUMLPackage;

			static bool isInited;
			static FUMLPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createAcceptEventActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAcceptEventActionEventAccepterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityEdgeInstanceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityExecutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityFinalNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityNodeActivationGroupContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityParameterNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAddStructuralFeatureValueActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createBooleanValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallBehaviorActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallOperationActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCentralBufferNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createChoiceStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClassifierBehaviorExecutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClassifierBehaviorExecutionActivityContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClauseActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClearAssociationActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClearStructuralFeatureActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCompoundValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConditionalNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createControlNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createControlTokenContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCreateLinkActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCreateObjectActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDataStoreNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDataValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDecisionNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDestroyLinkActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDestroyObjectActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDispatchStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEnumerationValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEventAccepterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEventDispatchLoopContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEventOccurrenceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionFactoryContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionFactoryL1Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionFactoryL2Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionFactoryL3Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExpansionActivationGroupContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExpansionNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExpansionRegionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExtensionalValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExtensionalValueListContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFIFOGetNextEventStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFeatureValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFirstChoiceStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFlowFinalNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createForkNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createForkedTokenContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createGetNextEventStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInitialNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInputPinActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInstanceValueEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createIntegerValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInvocationActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createJoinNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLinkContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLinkActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralBooleanEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralIntegerEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralNullEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralRealEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralStringEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralUnlimitedNaturalEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLocusContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLoopNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createMergeNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObjectContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObjectActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObjectNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObjectTokenContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOfferContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOpaqueBehaviorExecutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOutputPinActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createParameterValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPinActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPrimitiveValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadExtentActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadIsClassifiedObjectActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadLinkActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadSelfActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadStructuralFeatureActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRealValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReclassifyObjectActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRedefinitionBasedDispatchStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReduceActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReferenceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRemoveStructuralFeatureValueActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSemanticStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSemanticVisitorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSendSignalActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSignalInstanceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStartClassifierBehaviorActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStartObjectBehaviorActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStringValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStructuralFeatureActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStructuredActivityNodeActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStructuredValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTestIdentityActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTokenContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTokenSetContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createUnlimitedNaturalValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createValueSpecificActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createValuesContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createWriteLinkActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createWriteStructuralFeatureActionActivationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);

			void initializeAcceptEventActionActivationContent();
			void initializeAcceptEventActionEventAccepterContent();
			void initializeActionActivationContent();
			void initializeActivityEdgeInstanceContent();
			void initializeActivityExecutionContent();
			void initializeActivityFinalNodeActivationContent();
			void initializeActivityNodeActivationContent();
			void initializeActivityNodeActivationGroupContent();
			void initializeActivityParameterNodeActivationContent();
			void initializeAddStructuralFeatureValueActionActivationContent();
			void initializeBooleanValueContent();
			void initializeCallActionActivationContent();
			void initializeCallBehaviorActionActivationContent();
			void initializeCallOperationActionActivationContent();
			void initializeCentralBufferNodeActivationContent();
			void initializeChoiceStrategyContent();
			void initializeClassifierBehaviorExecutionContent();
			void initializeClassifierBehaviorExecutionActivityContent();
			void initializeClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1Content();
			void initializeClauseActivationContent();
			void initializeClearAssociationActionActivationContent();
			void initializeClearStructuralFeatureActionActivationContent();
			void initializeCompoundValueContent();
			void initializeConditionalNodeActivationContent();
			void initializeControlNodeActivationContent();
			void initializeControlTokenContent();
			void initializeCreateLinkActionActivationContent();
			void initializeCreateObjectActionActivationContent();
			void initializeDataStoreNodeActivationContent();
			void initializeDataValueContent();
			void initializeDecisionNodeActivationContent();
			void initializeDestroyLinkActionActivationContent();
			void initializeDestroyObjectActionActivationContent();
			void initializeDispatchStrategyContent();
			void initializeEnumerationValueContent();
			void initializeEvaluationContent();
			void initializeEventAccepterContent();
			void initializeEventDispatchLoopContent();
			void initializeEventOccurrenceContent();
			void initializeExecutionContent();
			void initializeExecutionFactoryContent();
			void initializeExecutionFactoryL1Content();
			void initializeExecutionFactoryL2Content();
			void initializeExecutionFactoryL3Content();
			void initializeExecutorContent();
			void initializeExpansionActivationGroupContent();
			void initializeExpansionNodeActivationContent();
			void initializeExpansionRegionActivationContent();
			void initializeExtensionalValueContent();
			void initializeExtensionalValueListContent();
			void initializeFIFOGetNextEventStrategyContent();
			void initializeFeatureValueContent();
			void initializeFirstChoiceStrategyContent();
			void initializeFlowFinalNodeActivationContent();
			void initializeForkNodeActivationContent();
			void initializeForkedTokenContent();
			void initializeGetNextEventStrategyContent();
			void initializeInitialNodeActivationContent();
			void initializeInputPinActivationContent();
			void initializeInstanceValueEvaluationContent();
			void initializeIntegerValueContent();
			void initializeInvocationActionActivationContent();
			void initializeJoinNodeActivationContent();
			void initializeLinkContent();
			void initializeLinkActionActivationContent();
			void initializeLiteralBooleanEvaluationContent();
			void initializeLiteralEvaluationContent();
			void initializeLiteralIntegerEvaluationContent();
			void initializeLiteralNullEvaluationContent();
			void initializeLiteralRealEvaluationContent();
			void initializeLiteralStringEvaluationContent();
			void initializeLiteralUnlimitedNaturalEvaluationContent();
			void initializeLocusContent();
			void initializeLoopNodeActivationContent();
			void initializeMergeNodeActivationContent();
			void initializeObjectContent();
			void initializeObjectActivationContent();
			void initializeObjectNodeActivationContent();
			void initializeObjectTokenContent();
			void initializeOfferContent();
			void initializeOpaqueBehaviorExecutionContent();
			void initializeOutputPinActivationContent();
			void initializeParameterValueContent();
			void initializePinActivationContent();
			void initializePrimitiveValueContent();
			void initializeReadExtentActionActivationContent();
			void initializeReadIsClassifiedObjectActionActivationContent();
			void initializeReadLinkActionActivationContent();
			void initializeReadSelfActionActivationContent();
			void initializeReadStructuralFeatureActionActivationContent();
			void initializeRealValueContent();
			void initializeReclassifyObjectActionActivationContent();
			void initializeRedefinitionBasedDispatchStrategyContent();
			void initializeReduceActionActivationContent();
			void initializeReferenceContent();
			void initializeRemoveStructuralFeatureValueActivationContent();
			void initializeSemanticStrategyContent();
			void initializeSemanticVisitorContent();
			void initializeSendSignalActionActivationContent();
			void initializeSignalInstanceContent();
			void initializeStartClassifierBehaviorActionActivationContent();
			void initializeStartObjectBehaviorActionActivationContent();
			void initializeStringValueContent();
			void initializeStructuralFeatureActionActivationContent();
			void initializeStructuredActivityNodeActivationContent();
			void initializeStructuredValueContent();
			void initializeTestIdentityActionActivationContent();
			void initializeTokenContent();
			void initializeTokenSetContent();
			void initializeUnlimitedNaturalValueContent();
			void initializeValueContent();
			void initializeValueSpecificActionActivationContent();
			void initializeValuesContent();
			void initializeWriteLinkActionActivationContent();
			void initializeWriteStructuralFeatureActionActivationContent();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: FUMLPACKAGEIMPL_HPP */
